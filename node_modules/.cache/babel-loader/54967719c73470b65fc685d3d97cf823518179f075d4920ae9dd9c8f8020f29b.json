{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sanjeela\\\\Desktop\\\\Security_CW2\\\\Frontend\\\\src\\\\pages\\\\user\\\\Register.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { registerApi } from \"../../apis/Apis\";\n// import { toast } from \"react-toastify\";\n\n// const Register = () => {\n//   const [firstName, setFirstName] = useState(\"\");\n//   const [lastName, setLastName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n//   const changeFirstName = (e) => {\n//     setFirstName(e.target.value);\n//   };\n\n//   const changeLastName = (e) => {\n//     setLastName(e.target.value);\n//   };\n\n//   const changeEmail = (e) => {\n//     setEmail(e.target.value);\n//   };\n\n//   const changePassword = (e) => {\n//     setPassword(e.target.value);\n//   };\n\n//   const changeconfirmPassword = (e) => {\n//     setConfirmPassword(e.target.value);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     const data = {\n//       firstName: firstName,\n//       lastName: lastName,\n//       email: email,\n//       password: password,\n//       confirmPassword: confirmPassword,\n//     };\n\n//     registerApi(data)\n//       .then((res) => {\n//         if (res.data.success === true) {\n//           toast.success(res.data.message);\n//         } else {\n//           toast.error(res.data.message);\n//         }\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//         toast.error(\"Internal Server Error!\");\n//       });\n//   };\n\n//   return (\n//     <div className=\"d-flex justify-content-center align-items-center vh-100\">\n//       <div\n//         className=\"d-flex\"\n//         style={{\n//           boxShadow: \"0px 0px 10px 0px rgba(0,0,0,0.2)\",\n//           padding: \"20px\",\n//           borderRadius: \"10px\",\n//         }}\n//       >\n//         {/* Left side with image */}\n//         <div className=\"w-50\" style={{ marginRight: \"20px\" }}>\n//           <img\n//             src=\"/assets/images/Cover.jpg\"\n//             alt=\"Cover Page\"\n//             className=\"w-100 h-100\"\n//           />\n//         </div>\n\n//         {/* Right side with form */}\n//         <div className=\"w-50\">\n//           <h1 className=\"m-4\">Create an Account</h1>\n//           <form className=\"w-75\">\n//             <label>Firstname</label>\n//             <input\n//               onChange={changeFirstName}\n//               className=\"form-control mb-2\"\n//               type=\"text\"\n//               placeholder=\"Enter your firstname\"\n//             />\n\n//             <label>Lastname</label>\n//             <input\n//               onChange={changeLastName}\n//               className=\"form-control mb-2\"\n//               type=\"text\"\n//               placeholder=\"Enter your lastname\"\n//             />\n\n//             <label>Email</label>\n//             <input\n//               onChange={changeEmail}\n//               className=\"form-control mb-2\"\n//               type=\"email\"\n//               placeholder=\"Enter your email\"\n//             />\n\n//             <label>Password</label>\n//             <input\n//               onChange={changePassword}\n//               className=\"form-control mb-2\"\n//               type=\"password\"\n//               placeholder=\"Enter your password\"\n//             />\n\n//             <label>Confirm Password</label>\n//             <input\n//               onChange={changeconfirmPassword}\n//               className=\"form-control mb-2\"\n//               type=\"password\"\n//               placeholder=\"Enter your confirm password\"\n//             />\n\n//             <button\n//               onClick={handleSubmit}\n//               className=\"btn btn-secondary w-100\"\n//               type=\"submit\"\n//               style={{ backgroundColor: \"rgba(97, 124, 181, 1)\" }}\n//             >\n//               Signup\n//             </button>\n//             <p className=\"mt-4, \">\n//               Already have an account? <a href=\"/\">Login</a>\n//             </p>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Register;\n\n// import React, { useState } from \"react\";\n// import { registerApi } from \"../../apis/Apis\";\n// import { toast } from \"react-toastify\";\n\n// const Register = () => {\n//   const [firstName, setFirstName] = useState(\"\");\n//   const [lastName, setLastName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\n//   const [passwordStrength, setPasswordStrength] = useState(\"\");\n\n//   const changeFirstName = (e) => {\n//     setFirstName(e.target.value);\n//   };\n\n//   const changeLastName = (e) => {\n//     setLastName(e.target.value);\n//   };\n\n//   const changeEmail = (e) => {\n//     setEmail(e.target.value);\n//   };\n\n//   const changePassword = (e) => {\n//     const pwd = e.target.value;\n//     setPassword(pwd);\n//     evaluatePasswordStrength(pwd);\n//   };\n\n//   const changeConfirmPassword = (e) => {\n//     setConfirmPassword(e.target.value);\n//   };\n\n//   const evaluatePasswordStrength = (password) => {\n//     const lengthRequirement = /.{8,12}/;\n//     const uppercaseRequirement = /[A-Z]/;\n//     const lowercaseRequirement = /[a-z]/;\n//     const numberRequirement = /[0-9]/;\n//     const specialCharRequirement = /[!@#$%^&*]/;\n\n//     if (\n//       lengthRequirement.test(password) &&\n//       uppercaseRequirement.test(password) &&\n//       lowercaseRequirement.test(password) &&\n//       numberRequirement.test(password) &&\n//       specialCharRequirement.test(password)\n//     ) {\n//       setPasswordStrength(\"Strong\");\n//     } else if (\n//       lengthRequirement.test(password) &&\n//       (uppercaseRequirement.test(password) ||\n//         lowercaseRequirement.test(password)) &&\n//       (numberRequirement.test(password) || specialCharRequirement.test(password))\n//     ) {\n//       setPasswordStrength(\"Medium\");\n//     } else {\n//       setPasswordStrength(\"Weak\");\n//     }\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     if (!email.includes(\"@\")) {\n//       toast.error(\"Invalid email format.\");\n//       return;\n//     }\n\n//     if (passwordStrength === \"Weak\") {\n//       toast.error(\"Password is too weak.\");\n//       return;\n//     }\n\n//     if (password !== confirmPassword) {\n//       toast.error(\"Passwords do not match.\");\n//       return;\n//     }\n\n//     const data = {\n//       firstName: firstName,\n//       lastName: lastName,\n//       email: email,\n//       password: password,\n//       confirmPassword: confirmPassword,\n//     };\n\n//     registerApi(data)\n//       .then((res) => {\n//         if (res.data.success === true) {\n//           toast.success(res.data.message);\n//         } else {\n//           toast.error(res.data.message);\n//         }\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//         toast.error(\"Internal Server Error!\");\n//       });\n//   };\n\n//   return (\n//     <div className=\"d-flex justify-content-center align-items-center vh-100\">\n//       <div\n//         className=\"d-flex\"\n//         style={{\n//           boxShadow: \"0px 0px 10px 0px rgba(0,0,0,0.2)\",\n//           padding: \"20px\",\n//           borderRadius: \"10px\",\n//         }}\n//       >\n//         {/* Left side with image */}\n//         <div className=\"w-50\" style={{ marginRight: \"20px\" }}>\n//           <img\n//             src=\"/assets/images/Cover.jpg\"\n//             alt=\"Cover Page\"\n//             className=\"w-100 h-100\"\n//           />\n//         </div>\n\n//         {/* Right side with form */}\n//         <div className=\"w-50\">\n//           <h1 className=\"m-4\">Create an Account</h1>\n//           <form className=\"w-75\" onSubmit={handleSubmit}>\n//             <label>Firstname</label>\n//             <input\n//               onChange={changeFirstName}\n//               className=\"form-control mb-2\"\n//               type=\"text\"\n//               placeholder=\"Enter your firstname\"\n//               value={firstName}\n//             />\n\n//             <label>Lastname</label>\n//             <input\n//               onChange={changeLastName}\n//               className=\"form-control mb-2\"\n//               type=\"text\"\n//               placeholder=\"Enter your lastname\"\n//               value={lastName}\n//             />\n\n//             <label>Email</label>\n//             <input\n//               onChange={changeEmail}\n//               className=\"form-control mb-2\"\n//               type=\"email\"\n//               placeholder=\"Enter your email\"\n//               value={email}\n//             />\n\n//             <label>Password</label>\n//             <input\n//               onChange={changePassword}\n//               className=\"form-control mb-2\"\n//               type=\"password\"\n//               placeholder=\"Enter your password\"\n//               value={password}\n//             />\n//             <div className={`mb-2 ${passwordStrength}`}>\n//               Password Strength: <strong>{passwordStrength}</strong>\n//             </div>\n\n//             <label>Confirm Password</label>\n//             <input\n//               onChange={changeConfirmPassword}\n//               className=\"form-control mb-2\"\n//               type=\"password\"\n//               placeholder=\"Enter your confirm password\"\n//               value={confirmPassword}\n//             />\n\n//             <button\n//               className=\"btn btn-secondary w-100\"\n//               type=\"submit\"\n//               style={{ backgroundColor: \"rgba(97, 124, 181, 1)\" }}\n//             >\n//               Signup\n//             </button>\n//             <p className=\"mt-4, \">\n//               Already have an account? <a href=\"/\">Login</a>\n//             </p>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Register;\n\n// import React, { useState } from \"react\";\n// import { registerApi } from \"../../apis/Apis\";\n// import { toast } from \"react-toastify\";\n\n// const Register = () => {\n//   const [firstName, setFirstName] = useState(\"\");\n//   const [lastName, setLastName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\n//   const [passwordStrength, setPasswordStrength] = useState(\"\");\n//   const [passwordError, setPasswordError] = useState(\"\");\n\n//   const changeFirstName = (e) => {\n//     setFirstName(e.target.value);\n//   };\n\n//   const changeLastName = (e) => {\n//     setLastName(e.target.value);\n//   };\n\n//   const changeEmail = (e) => {\n//     setEmail(e.target.value);\n//   };\n\n//   const changePassword = (e) => {\n//     const pwd = e.target.value;\n//     setPassword(pwd);\n//     evaluatePasswordStrength(pwd);\n//   };\n\n//   const changeConfirmPassword = (e) => {\n//     setConfirmPassword(e.target.value);\n//   };\n\n//   const evaluatePasswordStrength = (password) => {\n//     const lengthRequirement = /.{8,12}/;\n//     const uppercaseRequirement = /[A-Z]/;\n//     const lowercaseRequirement = /[a-z]/;\n//     const numberRequirement = /[0-9]/;\n//     const specialCharRequirement = /[!@#$%^&*]/;\n\n//     if (password.length < 8) {\n//       setPasswordError(\"Password must be at least 8 characters long.\");\n//       setPasswordStrength(\"Weak\");\n//       return;\n//     }\n\n//     if (\n//       lengthRequirement.test(password) &&\n//       uppercaseRequirement.test(password) &&\n//       lowercaseRequirement.test(password) &&\n//       numberRequirement.test(password) &&\n//       specialCharRequirement.test(password)\n//     ) {\n//       setPasswordStrength(\"Strong\");\n//       setPasswordError(\"\");\n//     } else if (\n//       lengthRequirement.test(password) &&\n//       (uppercaseRequirement.test(password) ||\n//         lowercaseRequirement.test(password)) &&\n//       (numberRequirement.test(password) || specialCharRequirement.test(password))\n//     ) {\n//       setPasswordStrength(\"Medium\");\n//       setPasswordError(\"\");\n//     } else {\n//       setPasswordStrength(\"Weak\");\n//       setPasswordError(\n//         \"Password must contain uppercase, lowercase, numbers, and special characters.\"\n//       );\n//     }\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     if (!email.includes(\"@\")) {\n//       toast.error(\"Invalid email format.\");\n//       return;\n//     }\n\n//     if (passwordStrength === \"Weak\") {\n//       toast.error(\"Password is too weak.\");\n//       return;\n//     }\n\n//     if (password !== confirmPassword) {\n//       toast.error(\"Passwords do not match.\");\n//       return;\n//     }\n\n//     const data = {\n//       firstName: firstName,\n//       lastName: lastName,\n//       email: email,\n//       password: password,\n//       confirmPassword: confirmPassword,\n//     };\n\n//     registerApi(data)\n//       .then((res) => {\n//         if (res.data.success === true) {\n//           toast.success(res.data.message);\n//         } else {\n//           toast.error(res.data.message);\n//         }\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//         toast.error(\"Internal Server Error!\");\n//       });\n//   };\n\n//   return (\n//     <div className=\"d-flex justify-content-center align-items-center vh-100\">\n//       <div\n//         className=\"d-flex\"\n//         style={{\n//           boxShadow: \"0px 0px 10px 0px rgba(0,0,0,0.2)\",\n//           padding: \"20px\",\n//           borderRadius: \"10px\",\n//         }}\n//       >\n//         {/* Left side with image */}\n//         <div className=\"w-50\" style={{ marginRight: \"20px\" }}>\n//           <img\n//             src=\"/assets/images/Cover.jpg\"\n//             alt=\"Cover Page\"\n//             className=\"w-100 h-100\"\n//           />\n//         </div>\n\n//         {/* Right side with form */}\n//         <div className=\"w-50\">\n//           <h1 className=\"m-4\">Create an Account</h1>\n//           <form className=\"w-75\" onSubmit={handleSubmit}>\n//             <label>Firstname</label>\n//             <input\n//               onChange={changeFirstName}\n//               className=\"form-control mb-2\"\n//               type=\"text\"\n//               placeholder=\"Enter your firstname\"\n//               value={firstName}\n//             />\n\n//             <label>Lastname</label>\n//             <input\n//               onChange={changeLastName}\n//               className=\"form-control mb-2\"\n//               type=\"text\"\n//               placeholder=\"Enter your lastname\"\n//               value={lastName}\n//             />\n\n//             <label>Email</label>\n//             <input\n//               onChange={changeEmail}\n//               className=\"form-control mb-2\"\n//               type=\"email\"\n//               placeholder=\"Enter your email\"\n//               value={email}\n//             />\n\n//             <label>Password</label>\n//             <input\n//               onChange={changePassword}\n//               className=\"form-control mb-2\"\n//               type=\"password\"\n//               placeholder=\"Enter your password\"\n//               value={password}\n//             />\n//             <div\n//               className=\"mb-2\"\n//               style={{\n//                 color:\n//                   passwordStrength === \"Strong\"\n//                     ? \"green\"\n//                     : passwordStrength === \"Medium\"\n//                     ? \"orange\"\n//                     : \"red\",\n//               }}\n//             >\n//               Password Strength: <strong>{passwordStrength}</strong>\n//             </div>\n//             {passwordError && (\n//               <div style={{ color: \"red\" }}>\n//                 <small>{passwordError}</small>\n//               </div>\n//             )}\n\n//             <label>Confirm Password</label>\n//             <input\n//               onChange={changeConfirmPassword}\n//               className=\"form-control mb-2\"\n//               type=\"password\"\n//               placeholder=\"Enter your confirm password\"\n//               value={confirmPassword}\n//             />\n\n//             <button\n//               className=\"btn btn-secondary w-100\"\n//               type=\"submit\"\n//               style={{ backgroundColor: \"rgba(97, 124, 181, 1)\" }}\n//             >\n//               Signup\n//             </button>\n//             <p className=\"mt-4, \">\n//               Already have an account? <a href=\"/\">Login</a>\n//             </p>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Register;\n\n// import React, { useState } from \"react\";\n// import { registerApi } from \"../../apis/Apis\";\n// import { toast } from \"react-toastify\";\n\n// const Register = () => {\n//   const [firstName, setFirstName] = useState(\"\");\n//   const [lastName, setLastName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\n//   const [passwordStrength, setPasswordStrength] = useState(\"\");\n//   const [passwordError, setPasswordError] = useState(\"\");\n\n//   const changeFirstName = (e) => {\n//     setFirstName(e.target.value);\n//   };\n\n//   const changeLastName = (e) => {\n//     setLastName(e.target.value);\n//   };\n\n//   const changeEmail = (e) => {\n//     setEmail(e.target.value);\n//   };\n\n//   const changePassword = (e) => {\n//     const pwd = e.target.value;\n//     setPassword(pwd);\n//     evaluatePasswordStrength(pwd);\n//   };\n\n//   const changeConfirmPassword = (e) => {\n//     setConfirmPassword(e.target.value);\n//   };\n\n//   const evaluatePasswordStrength = (password) => {\n//     const lengthRequirement = /.{8,12}/;\n//     const uppercaseRequirement = /[A-Z]/;\n//     const lowercaseRequirement = /[a-z]/;\n//     const numberRequirement = /[0-9]/;\n//     const specialCharRequirement = /[!@#$%^&*]/;\n\n//     if (password.length < 8) {\n//       setPasswordError(\"Password must be at least 8 characters long.\");\n//       setPasswordStrength(\"Weak\");\n//       return;\n//     }\n\n//     if (\n//       lengthRequirement.test(password) &&\n//       uppercaseRequirement.test(password) &&\n//       lowercaseRequirement.test(password) &&\n//       numberRequirement.test(password) &&\n//       specialCharRequirement.test(password)\n//     ) {\n//       setPasswordStrength(\"Strong\");\n//       setPasswordError(\"\");\n//     } else if (\n//       lengthRequirement.test(password) &&\n//       (uppercaseRequirement.test(password) ||\n//         lowercaseRequirement.test(password)) &&\n//       (numberRequirement.test(password) || specialCharRequirement.test(password))\n//     ) {\n//       setPasswordStrength(\"Medium\");\n//       setPasswordError(\"\");\n//     } else {\n//       setPasswordStrength(\"Weak\");\n//       setPasswordError(\n//         \"Password must contain uppercase, lowercase, numbers, and special characters.\"\n//       );\n//     }\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     if (!email.includes(\"@\")) {\n//       toast.error(\"Invalid email format.\");\n//       return;\n//     }\n\n//     if (passwordStrength === \"Weak\") {\n//       toast.error(\"Password is too weak.\");\n//       return;\n//     }\n\n//     if (password !== confirmPassword) {\n//       toast.error(\"Passwords do not match.\");\n//       return;\n//     }\n\n//     const data = {\n//       firstName: firstName,\n//       lastName: lastName,\n//       email: email,\n//       password: password,\n//       confirmPassword: confirmPassword,\n//     };\n\n//     registerApi(data)\n//       .then((res) => {\n//         if (res.data.success === true) {\n//           toast.success(res.data.message);\n//         } else {\n//           toast.error(res.data.message);\n//         }\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//         toast.error(\"Internal Server Error!\");\n//       });\n//   };\n\n//   // Determine the background color of the password strength indicator based on password strength\n//   const getPasswordStrengthColor = (strength) => {\n//     switch (strength) {\n//       case \"Strong\":\n//         return \"green\";\n//       case \"Medium\":\n//         return \"orange\";\n//       case \"Weak\":\n//       default:\n//         return \"red\";\n//     }\n//   };\n\n//   // Determine the width of the filled portion of the password strength bar based on password strength\n//   const getPasswordStrengthWidth = (strength) => {\n//     switch (strength) {\n//       case \"Strong\":\n//         return \"100%\";\n//       case \"Medium\":\n//         return \"66%\";\n//       case \"Weak\":\n//       default:\n//         return \"33%\";\n//     }\n//   };\n\n//   return (\n//     <div className=\"d-flex justify-content-center align-items-center vh-100\">\n//       <div\n//         className=\"d-flex\"\n//         style={{\n//           boxShadow: \"0px 0px 10px 0px rgba(0,0,0,0.2)\",\n//           padding: \"20px\",\n//           borderRadius: \"10px\",\n//         }}\n//       >\n//         {/* Left side with image */}\n//         <div className=\"w-50\" style={{ marginRight: \"20px\" }}>\n//           <img\n//             src=\"/assets/images/Cover.jpg\"\n//             alt=\"Cover Page\"\n//             className=\"w-100 h-100\"\n//           />\n//         </div>\n\n//         {/* Right side with form */}\n//         <div className=\"w-50\">\n//           <h1 className=\"m-4\">Create an Account</h1>\n//           <form className=\"w-75\" onSubmit={handleSubmit}>\n//             <label>Firstname</label>\n//             <input\n//               onChange={changeFirstName}\n//               className=\"form-control mb-2\"\n//               type=\"text\"\n//               placeholder=\"Enter your firstname\"\n//               value={firstName}\n//             />\n\n//             <label>Lastname</label>\n//             <input\n//               onChange={changeLastName}\n//               className=\"form-control mb-2\"\n//               type=\"text\"\n//               placeholder=\"Enter your lastname\"\n//               value={lastName}\n//             />\n\n//             <label>Email</label>\n//             <input\n//               onChange={changeEmail}\n//               className=\"form-control mb-2\"\n//               type=\"email\"\n//               placeholder=\"Enter your email\"\n//               value={email}\n//             />\n\n//             <label>Password</label>\n//             <input\n//               onChange={changePassword}\n//               className=\"form-control mb-2\"\n//               type=\"password\"\n//               placeholder=\"Enter your password\"\n//               value={password}\n//             />\n//             {/* Password Strength Indicator Line */}\n//             <div className=\"password-strength-indicator mb-2\" style={{ position: \"relative\", height: \"10px\", backgroundColor: \"#e0e0e0\", borderRadius: \"5px\" }}>\n//               <div\n//                 style={{\n//                   position: \"absolute\",\n//                   height: \"100%\",\n//                   width: getPasswordStrengthWidth(passwordStrength),\n//                   backgroundColor: getPasswordStrengthColor(passwordStrength),\n//                   borderRadius: \"5px\",\n//                   transition: \"width 0.5s, background-color 0.5s\",\n//                 }}\n//               />\n//             </div>\n//             {passwordStrength && (\n//               <div style={{ color: getPasswordStrengthColor(passwordStrength) }}>\n//                 <small>{passwordStrength}</small>\n//               </div>\n//             )}\n//             {passwordError && (\n//               <div style={{ color: \"red\" }}>\n//                 <small>{passwordError}</small>\n//               </div>\n//             )}\n\n//             <label>Confirm Password</label>\n//             <input\n//               onChange={changeConfirmPassword}\n//               className=\"form-control mb-2\"\n//               type=\"password\"\n//               placeholder=\"Enter your confirm password\"\n//               value={confirmPassword}\n//             />\n\n//             <button\n//               className=\"btn btn-secondary w-100\"\n//               type=\"submit\"\n//               style={{ backgroundColor: \"rgba(97, 124, 181, 1)\" }}\n//             >\n//               Signup\n//             </button>\n//             <p className=\"mt-4, \">\n//               Already have an account? <a href=\"/\">Login</a>\n//             </p>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Register;\n\nimport React, { useState } from \"react\";\nimport { registerApi } from \"../../apis/Apis\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordStrength, setPasswordStrength] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const changeFirstName = e => {\n    setFirstName(e.target.value);\n  };\n  const changeLastName = e => {\n    setLastName(e.target.value);\n  };\n  const changeEmail = e => {\n    setEmail(e.target.value);\n  };\n  const changePassword = e => {\n    const pwd = e.target.value;\n    setPassword(pwd);\n    evaluatePasswordStrength(pwd);\n  };\n  const changeConfirmPassword = e => {\n    setConfirmPassword(e.target.value);\n  };\n  const evaluatePasswordStrength = password => {\n    const lengthRequirement = /.{8,12}/;\n    const uppercaseRequirement = /[A-Z]/;\n    const lowercaseRequirement = /[a-z]/;\n    const numberRequirement = /[0-9]/;\n    const specialCharRequirement = /[!@#$%^&*]/;\n    if (password.length < 8) {\n      setPasswordError(\"Password must be at least 8 characters long.\");\n      setPasswordStrength(\"Weak\");\n      return;\n    }\n    if (lengthRequirement.test(password) && uppercaseRequirement.test(password) && lowercaseRequirement.test(password) && numberRequirement.test(password) && specialCharRequirement.test(password)) {\n      setPasswordStrength(\"Strong\");\n      setPasswordError(\"\");\n    } else if (lengthRequirement.test(password) && (uppercaseRequirement.test(password) || lowercaseRequirement.test(password)) && (numberRequirement.test(password) || specialCharRequirement.test(password))) {\n      setPasswordStrength(\"Medium\");\n      setPasswordError(\"\");\n    } else {\n      setPasswordStrength(\"Weak\");\n      setPasswordError(\"Password must contain uppercase, lowercase, numbers, and special characters.\");\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!email.includes(\"@\")) {\n      toast.error(\"Invalid email format.\");\n      return;\n    }\n    if (passwordStrength === \"Weak\") {\n      toast.error(\"Password is too weak.\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      toast.error(\"Passwords do not match.\");\n      return;\n    }\n    const data = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password,\n      confirmPassword: confirmPassword\n    };\n    registerApi(data).then(res => {\n      if (res.data.success) {\n        toast.success(res.data.message);\n      } else {\n        toast.error(res.data.message);\n      }\n    }).catch(err => {\n      console.error(err);\n      toast.error(\"Internal Server Error!\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .container-flex {\n          display: flex;\n          height: 100vh;\n          width: 100%;\n          align-items: stretch;\n        }\n        .left-side {\n          width: 50%;\n          background-image: url('/assets/images/Cover.jpg');\n          background-size: cover;\n          background-position: center;\n        }\n        .right-side {\n          width: 50%;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          padding: 20px;\n        }\n        .register-form {\n          width: 75%;\n          max-width: 400px;\n        }\n        .form-control {\n          width: 100%;\n          padding: 8px;\n          margin-bottom: 15px;\n          border: 1px solid #ccc;\n          border-radius: 4px;\n        }\n        .btn-primary {\n          width: 100%;\n          padding: 10px;\n          background-color: #007bff;\n          border: none;\n          color: white;\n          cursor: pointer;\n          border-radius: 4px;\n        }\n        .btn-primary:hover {\n          background-color: #0056b3;\n        }\n        .password-strength-indicator {\n          background-color: #e0e0e0;\n          border-radius: 5px;\n          height: 10px;\n          position: relative;\n          margin-bottom: 15px;\n        }\n        .password-strength-fill {\n          height: 100%;\n          position: absolute;\n          border-radius: 5px;\n          transition: width 0.5s ease, background-color 0.5s ease;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 920,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-side\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-side\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Create an Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 981,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"First name\",\n              value: firstName,\n              onChange: changeFirstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 983,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Last name\",\n              value: lastName,\n              onChange: changeLastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 984,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control\",\n              placeholder: \"Email\",\n              value: email,\n              onChange: changeEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 985,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              placeholder: \"Password\",\n              value: password,\n              onChange: changePassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 986,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password-strength-indicator\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"password-strength-fill\",\n                style: {\n                  width: setPasswordStrength(passwordStrength),\n                  backgroundColor: setPasswordStrength(passwordStrength)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 988,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 987,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              placeholder: \"Confirm Password\",\n              value: confirmPassword,\n              onChange: changeConfirmPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 990,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 991,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\",\n              children: \"Log in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 993,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 980,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 979,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 977,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Register, \"9fhMoWs5PylBJ3/QhIKzHbK69/A=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","registerApi","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","passwordStrength","setPasswordStrength","passwordError","setPasswordError","changeFirstName","e","target","value","changeLastName","changeEmail","changePassword","pwd","evaluatePasswordStrength","changeConfirmPassword","lengthRequirement","uppercaseRequirement","lowercaseRequirement","numberRequirement","specialCharRequirement","length","test","handleSubmit","preventDefault","includes","error","data","then","res","success","message","catch","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","placeholder","onChange","style","width","backgroundColor","href","_c","$RefreshReg$"],"sources":["C:/Users/Sanjeela/Desktop/Security_CW2/Frontend/src/pages/user/Register.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { registerApi } from \"../../apis/Apis\";\r\n// import { toast } from \"react-toastify\";\r\n\r\n// const Register = () => {\r\n//   const [firstName, setFirstName] = useState(\"\");\r\n//   const [lastName, setLastName] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n//   const changeFirstName = (e) => {\r\n//     setFirstName(e.target.value);\r\n//   };\r\n\r\n//   const changeLastName = (e) => {\r\n//     setLastName(e.target.value);\r\n//   };\r\n\r\n//   const changeEmail = (e) => {\r\n//     setEmail(e.target.value);\r\n//   };\r\n\r\n//   const changePassword = (e) => {\r\n//     setPassword(e.target.value);\r\n//   };\r\n\r\n//   const changeconfirmPassword = (e) => {\r\n//     setConfirmPassword(e.target.value);\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const data = {\r\n//       firstName: firstName,\r\n//       lastName: lastName,\r\n//       email: email,\r\n//       password: password,\r\n//       confirmPassword: confirmPassword,\r\n//     };\r\n\r\n//     registerApi(data)\r\n//       .then((res) => {\r\n//         if (res.data.success === true) {\r\n//           toast.success(res.data.message);\r\n//         } else {\r\n//           toast.error(res.data.message);\r\n//         }\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err);\r\n//         toast.error(\"Internal Server Error!\");\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"d-flex justify-content-center align-items-center vh-100\">\r\n//       <div\r\n//         className=\"d-flex\"\r\n//         style={{\r\n//           boxShadow: \"0px 0px 10px 0px rgba(0,0,0,0.2)\",\r\n//           padding: \"20px\",\r\n//           borderRadius: \"10px\",\r\n//         }}\r\n//       >\r\n//         {/* Left side with image */}\r\n//         <div className=\"w-50\" style={{ marginRight: \"20px\" }}>\r\n//           <img\r\n//             src=\"/assets/images/Cover.jpg\"\r\n//             alt=\"Cover Page\"\r\n//             className=\"w-100 h-100\"\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Right side with form */}\r\n//         <div className=\"w-50\">\r\n//           <h1 className=\"m-4\">Create an Account</h1>\r\n//           <form className=\"w-75\">\r\n//             <label>Firstname</label>\r\n//             <input\r\n//               onChange={changeFirstName}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your firstname\"\r\n//             />\r\n\r\n//             <label>Lastname</label>\r\n//             <input\r\n//               onChange={changeLastName}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your lastname\"\r\n//             />\r\n\r\n//             <label>Email</label>\r\n//             <input\r\n//               onChange={changeEmail}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"email\"\r\n//               placeholder=\"Enter your email\"\r\n//             />\r\n\r\n//             <label>Password</label>\r\n//             <input\r\n//               onChange={changePassword}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"password\"\r\n//               placeholder=\"Enter your password\"\r\n//             />\r\n\r\n//             <label>Confirm Password</label>\r\n//             <input\r\n//               onChange={changeconfirmPassword}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"password\"\r\n//               placeholder=\"Enter your confirm password\"\r\n//             />\r\n\r\n//             <button\r\n//               onClick={handleSubmit}\r\n//               className=\"btn btn-secondary w-100\"\r\n//               type=\"submit\"\r\n//               style={{ backgroundColor: \"rgba(97, 124, 181, 1)\" }}\r\n//             >\r\n//               Signup\r\n//             </button>\r\n//             <p className=\"mt-4, \">\r\n//               Already have an account? <a href=\"/\">Login</a>\r\n//             </p>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { registerApi } from \"../../apis/Apis\";\r\n// import { toast } from \"react-toastify\";\r\n\r\n// const Register = () => {\r\n//   const [firstName, setFirstName] = useState(\"\");\r\n//   const [lastName, setLastName] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n//   const [passwordStrength, setPasswordStrength] = useState(\"\");\r\n\r\n//   const changeFirstName = (e) => {\r\n//     setFirstName(e.target.value);\r\n//   };\r\n\r\n//   const changeLastName = (e) => {\r\n//     setLastName(e.target.value);\r\n//   };\r\n\r\n//   const changeEmail = (e) => {\r\n//     setEmail(e.target.value);\r\n//   };\r\n\r\n//   const changePassword = (e) => {\r\n//     const pwd = e.target.value;\r\n//     setPassword(pwd);\r\n//     evaluatePasswordStrength(pwd);\r\n//   };\r\n\r\n//   const changeConfirmPassword = (e) => {\r\n//     setConfirmPassword(e.target.value);\r\n//   };\r\n\r\n//   const evaluatePasswordStrength = (password) => {\r\n//     const lengthRequirement = /.{8,12}/;\r\n//     const uppercaseRequirement = /[A-Z]/;\r\n//     const lowercaseRequirement = /[a-z]/;\r\n//     const numberRequirement = /[0-9]/;\r\n//     const specialCharRequirement = /[!@#$%^&*]/;\r\n\r\n//     if (\r\n//       lengthRequirement.test(password) &&\r\n//       uppercaseRequirement.test(password) &&\r\n//       lowercaseRequirement.test(password) &&\r\n//       numberRequirement.test(password) &&\r\n//       specialCharRequirement.test(password)\r\n//     ) {\r\n//       setPasswordStrength(\"Strong\");\r\n//     } else if (\r\n//       lengthRequirement.test(password) &&\r\n//       (uppercaseRequirement.test(password) ||\r\n//         lowercaseRequirement.test(password)) &&\r\n//       (numberRequirement.test(password) || specialCharRequirement.test(password))\r\n//     ) {\r\n//       setPasswordStrength(\"Medium\");\r\n//     } else {\r\n//       setPasswordStrength(\"Weak\");\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (!email.includes(\"@\")) {\r\n//       toast.error(\"Invalid email format.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (passwordStrength === \"Weak\") {\r\n//       toast.error(\"Password is too weak.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (password !== confirmPassword) {\r\n//       toast.error(\"Passwords do not match.\");\r\n//       return;\r\n//     }\r\n\r\n\r\n//     const data = {\r\n//       firstName: firstName,\r\n//       lastName: lastName,\r\n//       email: email,\r\n//       password: password,\r\n//       confirmPassword: confirmPassword,\r\n//     };\r\n\r\n//     registerApi(data)\r\n//       .then((res) => {\r\n//         if (res.data.success === true) {\r\n//           toast.success(res.data.message);\r\n//         } else {\r\n//           toast.error(res.data.message);\r\n//         }\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err);\r\n//         toast.error(\"Internal Server Error!\");\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"d-flex justify-content-center align-items-center vh-100\">\r\n//       <div\r\n//         className=\"d-flex\"\r\n//         style={{\r\n//           boxShadow: \"0px 0px 10px 0px rgba(0,0,0,0.2)\",\r\n//           padding: \"20px\",\r\n//           borderRadius: \"10px\",\r\n//         }}\r\n//       >\r\n//         {/* Left side with image */}\r\n//         <div className=\"w-50\" style={{ marginRight: \"20px\" }}>\r\n//           <img\r\n//             src=\"/assets/images/Cover.jpg\"\r\n//             alt=\"Cover Page\"\r\n//             className=\"w-100 h-100\"\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Right side with form */}\r\n//         <div className=\"w-50\">\r\n//           <h1 className=\"m-4\">Create an Account</h1>\r\n//           <form className=\"w-75\" onSubmit={handleSubmit}>\r\n//             <label>Firstname</label>\r\n//             <input\r\n//               onChange={changeFirstName}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your firstname\"\r\n//               value={firstName}\r\n//             />\r\n\r\n//             <label>Lastname</label>\r\n//             <input\r\n//               onChange={changeLastName}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your lastname\"\r\n//               value={lastName}\r\n//             />\r\n\r\n//             <label>Email</label>\r\n//             <input\r\n//               onChange={changeEmail}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"email\"\r\n//               placeholder=\"Enter your email\"\r\n//               value={email}\r\n//             />\r\n\r\n//             <label>Password</label>\r\n//             <input\r\n//               onChange={changePassword}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"password\"\r\n//               placeholder=\"Enter your password\"\r\n//               value={password}\r\n//             />\r\n//             <div className={`mb-2 ${passwordStrength}`}>\r\n//               Password Strength: <strong>{passwordStrength}</strong>\r\n//             </div>\r\n\r\n//             <label>Confirm Password</label>\r\n//             <input\r\n//               onChange={changeConfirmPassword}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"password\"\r\n//               placeholder=\"Enter your confirm password\"\r\n//               value={confirmPassword}\r\n//             />\r\n\r\n//             <button\r\n//               className=\"btn btn-secondary w-100\"\r\n//               type=\"submit\"\r\n//               style={{ backgroundColor: \"rgba(97, 124, 181, 1)\" }}\r\n//             >\r\n//               Signup\r\n//             </button>\r\n//             <p className=\"mt-4, \">\r\n//               Already have an account? <a href=\"/\">Login</a>\r\n//             </p>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { registerApi } from \"../../apis/Apis\";\r\n// import { toast } from \"react-toastify\";\r\n\r\n// const Register = () => {\r\n//   const [firstName, setFirstName] = useState(\"\");\r\n//   const [lastName, setLastName] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n//   const [passwordStrength, setPasswordStrength] = useState(\"\");\r\n//   const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n//   const changeFirstName = (e) => {\r\n//     setFirstName(e.target.value);\r\n//   };\r\n\r\n//   const changeLastName = (e) => {\r\n//     setLastName(e.target.value);\r\n//   };\r\n\r\n//   const changeEmail = (e) => {\r\n//     setEmail(e.target.value);\r\n//   };\r\n\r\n//   const changePassword = (e) => {\r\n//     const pwd = e.target.value;\r\n//     setPassword(pwd);\r\n//     evaluatePasswordStrength(pwd);\r\n//   };\r\n\r\n//   const changeConfirmPassword = (e) => {\r\n//     setConfirmPassword(e.target.value);\r\n//   };\r\n\r\n//   const evaluatePasswordStrength = (password) => {\r\n//     const lengthRequirement = /.{8,12}/;\r\n//     const uppercaseRequirement = /[A-Z]/;\r\n//     const lowercaseRequirement = /[a-z]/;\r\n//     const numberRequirement = /[0-9]/;\r\n//     const specialCharRequirement = /[!@#$%^&*]/;\r\n\r\n//     if (password.length < 8) {\r\n//       setPasswordError(\"Password must be at least 8 characters long.\");\r\n//       setPasswordStrength(\"Weak\");\r\n//       return;\r\n//     }\r\n\r\n//     if (\r\n//       lengthRequirement.test(password) &&\r\n//       uppercaseRequirement.test(password) &&\r\n//       lowercaseRequirement.test(password) &&\r\n//       numberRequirement.test(password) &&\r\n//       specialCharRequirement.test(password)\r\n//     ) {\r\n//       setPasswordStrength(\"Strong\");\r\n//       setPasswordError(\"\");\r\n//     } else if (\r\n//       lengthRequirement.test(password) &&\r\n//       (uppercaseRequirement.test(password) ||\r\n//         lowercaseRequirement.test(password)) &&\r\n//       (numberRequirement.test(password) || specialCharRequirement.test(password))\r\n//     ) {\r\n//       setPasswordStrength(\"Medium\");\r\n//       setPasswordError(\"\");\r\n//     } else {\r\n//       setPasswordStrength(\"Weak\");\r\n//       setPasswordError(\r\n//         \"Password must contain uppercase, lowercase, numbers, and special characters.\"\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (!email.includes(\"@\")) {\r\n//       toast.error(\"Invalid email format.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (passwordStrength === \"Weak\") {\r\n//       toast.error(\"Password is too weak.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (password !== confirmPassword) {\r\n//       toast.error(\"Passwords do not match.\");\r\n//       return;\r\n//     }\r\n\r\n//     const data = {\r\n//       firstName: firstName,\r\n//       lastName: lastName,\r\n//       email: email,\r\n//       password: password,\r\n//       confirmPassword: confirmPassword,\r\n//     };\r\n\r\n//     registerApi(data)\r\n//       .then((res) => {\r\n//         if (res.data.success === true) {\r\n//           toast.success(res.data.message);\r\n//         } else {\r\n//           toast.error(res.data.message);\r\n//         }\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err);\r\n//         toast.error(\"Internal Server Error!\");\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"d-flex justify-content-center align-items-center vh-100\">\r\n//       <div\r\n//         className=\"d-flex\"\r\n//         style={{\r\n//           boxShadow: \"0px 0px 10px 0px rgba(0,0,0,0.2)\",\r\n//           padding: \"20px\",\r\n//           borderRadius: \"10px\",\r\n//         }}\r\n//       >\r\n//         {/* Left side with image */}\r\n//         <div className=\"w-50\" style={{ marginRight: \"20px\" }}>\r\n//           <img\r\n//             src=\"/assets/images/Cover.jpg\"\r\n//             alt=\"Cover Page\"\r\n//             className=\"w-100 h-100\"\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Right side with form */}\r\n//         <div className=\"w-50\">\r\n//           <h1 className=\"m-4\">Create an Account</h1>\r\n//           <form className=\"w-75\" onSubmit={handleSubmit}>\r\n//             <label>Firstname</label>\r\n//             <input\r\n//               onChange={changeFirstName}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your firstname\"\r\n//               value={firstName}\r\n//             />\r\n\r\n//             <label>Lastname</label>\r\n//             <input\r\n//               onChange={changeLastName}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your lastname\"\r\n//               value={lastName}\r\n//             />\r\n\r\n//             <label>Email</label>\r\n//             <input\r\n//               onChange={changeEmail}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"email\"\r\n//               placeholder=\"Enter your email\"\r\n//               value={email}\r\n//             />\r\n\r\n//             <label>Password</label>\r\n//             <input\r\n//               onChange={changePassword}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"password\"\r\n//               placeholder=\"Enter your password\"\r\n//               value={password}\r\n//             />\r\n//             <div\r\n//               className=\"mb-2\"\r\n//               style={{\r\n//                 color:\r\n//                   passwordStrength === \"Strong\"\r\n//                     ? \"green\"\r\n//                     : passwordStrength === \"Medium\"\r\n//                     ? \"orange\"\r\n//                     : \"red\",\r\n//               }}\r\n//             >\r\n//               Password Strength: <strong>{passwordStrength}</strong>\r\n//             </div>\r\n//             {passwordError && (\r\n//               <div style={{ color: \"red\" }}>\r\n//                 <small>{passwordError}</small>\r\n//               </div>\r\n//             )}\r\n\r\n//             <label>Confirm Password</label>\r\n//             <input\r\n//               onChange={changeConfirmPassword}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"password\"\r\n//               placeholder=\"Enter your confirm password\"\r\n//               value={confirmPassword}\r\n//             />\r\n\r\n//             <button\r\n//               className=\"btn btn-secondary w-100\"\r\n//               type=\"submit\"\r\n//               style={{ backgroundColor: \"rgba(97, 124, 181, 1)\" }}\r\n//             >\r\n//               Signup\r\n//             </button>\r\n//             <p className=\"mt-4, \">\r\n//               Already have an account? <a href=\"/\">Login</a>\r\n//             </p>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\n// import React, { useState } from \"react\";\r\n// import { registerApi } from \"../../apis/Apis\";\r\n// import { toast } from \"react-toastify\";\r\n\r\n// const Register = () => {\r\n//   const [firstName, setFirstName] = useState(\"\");\r\n//   const [lastName, setLastName] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n//   const [passwordStrength, setPasswordStrength] = useState(\"\");\r\n//   const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n//   const changeFirstName = (e) => {\r\n//     setFirstName(e.target.value);\r\n//   };\r\n\r\n//   const changeLastName = (e) => {\r\n//     setLastName(e.target.value);\r\n//   };\r\n\r\n//   const changeEmail = (e) => {\r\n//     setEmail(e.target.value);\r\n//   };\r\n\r\n//   const changePassword = (e) => {\r\n//     const pwd = e.target.value;\r\n//     setPassword(pwd);\r\n//     evaluatePasswordStrength(pwd);\r\n//   };\r\n\r\n//   const changeConfirmPassword = (e) => {\r\n//     setConfirmPassword(e.target.value);\r\n//   };\r\n\r\n//   const evaluatePasswordStrength = (password) => {\r\n//     const lengthRequirement = /.{8,12}/;\r\n//     const uppercaseRequirement = /[A-Z]/;\r\n//     const lowercaseRequirement = /[a-z]/;\r\n//     const numberRequirement = /[0-9]/;\r\n//     const specialCharRequirement = /[!@#$%^&*]/;\r\n\r\n//     if (password.length < 8) {\r\n//       setPasswordError(\"Password must be at least 8 characters long.\");\r\n//       setPasswordStrength(\"Weak\");\r\n//       return;\r\n//     }\r\n\r\n//     if (\r\n//       lengthRequirement.test(password) &&\r\n//       uppercaseRequirement.test(password) &&\r\n//       lowercaseRequirement.test(password) &&\r\n//       numberRequirement.test(password) &&\r\n//       specialCharRequirement.test(password)\r\n//     ) {\r\n//       setPasswordStrength(\"Strong\");\r\n//       setPasswordError(\"\");\r\n//     } else if (\r\n//       lengthRequirement.test(password) &&\r\n//       (uppercaseRequirement.test(password) ||\r\n//         lowercaseRequirement.test(password)) &&\r\n//       (numberRequirement.test(password) || specialCharRequirement.test(password))\r\n//     ) {\r\n//       setPasswordStrength(\"Medium\");\r\n//       setPasswordError(\"\");\r\n//     } else {\r\n//       setPasswordStrength(\"Weak\");\r\n//       setPasswordError(\r\n//         \"Password must contain uppercase, lowercase, numbers, and special characters.\"\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (!email.includes(\"@\")) {\r\n//       toast.error(\"Invalid email format.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (passwordStrength === \"Weak\") {\r\n//       toast.error(\"Password is too weak.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (password !== confirmPassword) {\r\n//       toast.error(\"Passwords do not match.\");\r\n//       return;\r\n//     }\r\n\r\n//     const data = {\r\n//       firstName: firstName,\r\n//       lastName: lastName,\r\n//       email: email,\r\n//       password: password,\r\n//       confirmPassword: confirmPassword,\r\n//     };\r\n\r\n//     registerApi(data)\r\n//       .then((res) => {\r\n//         if (res.data.success === true) {\r\n//           toast.success(res.data.message);\r\n//         } else {\r\n//           toast.error(res.data.message);\r\n//         }\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err);\r\n//         toast.error(\"Internal Server Error!\");\r\n//       });\r\n//   };\r\n\r\n//   // Determine the background color of the password strength indicator based on password strength\r\n//   const getPasswordStrengthColor = (strength) => {\r\n//     switch (strength) {\r\n//       case \"Strong\":\r\n//         return \"green\";\r\n//       case \"Medium\":\r\n//         return \"orange\";\r\n//       case \"Weak\":\r\n//       default:\r\n//         return \"red\";\r\n//     }\r\n//   };\r\n\r\n//   // Determine the width of the filled portion of the password strength bar based on password strength\r\n//   const getPasswordStrengthWidth = (strength) => {\r\n//     switch (strength) {\r\n//       case \"Strong\":\r\n//         return \"100%\";\r\n//       case \"Medium\":\r\n//         return \"66%\";\r\n//       case \"Weak\":\r\n//       default:\r\n//         return \"33%\";\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"d-flex justify-content-center align-items-center vh-100\">\r\n//       <div\r\n//         className=\"d-flex\"\r\n//         style={{\r\n//           boxShadow: \"0px 0px 10px 0px rgba(0,0,0,0.2)\",\r\n//           padding: \"20px\",\r\n//           borderRadius: \"10px\",\r\n//         }}\r\n//       >\r\n//         {/* Left side with image */}\r\n//         <div className=\"w-50\" style={{ marginRight: \"20px\" }}>\r\n//           <img\r\n//             src=\"/assets/images/Cover.jpg\"\r\n//             alt=\"Cover Page\"\r\n//             className=\"w-100 h-100\"\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Right side with form */}\r\n//         <div className=\"w-50\">\r\n//           <h1 className=\"m-4\">Create an Account</h1>\r\n//           <form className=\"w-75\" onSubmit={handleSubmit}>\r\n//             <label>Firstname</label>\r\n//             <input\r\n//               onChange={changeFirstName}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your firstname\"\r\n//               value={firstName}\r\n//             />\r\n\r\n//             <label>Lastname</label>\r\n//             <input\r\n//               onChange={changeLastName}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your lastname\"\r\n//               value={lastName}\r\n//             />\r\n\r\n//             <label>Email</label>\r\n//             <input\r\n//               onChange={changeEmail}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"email\"\r\n//               placeholder=\"Enter your email\"\r\n//               value={email}\r\n//             />\r\n\r\n//             <label>Password</label>\r\n//             <input\r\n//               onChange={changePassword}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"password\"\r\n//               placeholder=\"Enter your password\"\r\n//               value={password}\r\n//             />\r\n//             {/* Password Strength Indicator Line */}\r\n//             <div className=\"password-strength-indicator mb-2\" style={{ position: \"relative\", height: \"10px\", backgroundColor: \"#e0e0e0\", borderRadius: \"5px\" }}>\r\n//               <div\r\n//                 style={{\r\n//                   position: \"absolute\",\r\n//                   height: \"100%\",\r\n//                   width: getPasswordStrengthWidth(passwordStrength),\r\n//                   backgroundColor: getPasswordStrengthColor(passwordStrength),\r\n//                   borderRadius: \"5px\",\r\n//                   transition: \"width 0.5s, background-color 0.5s\",\r\n//                 }}\r\n//               />\r\n//             </div>\r\n//             {passwordStrength && (\r\n//               <div style={{ color: getPasswordStrengthColor(passwordStrength) }}>\r\n//                 <small>{passwordStrength}</small>\r\n//               </div>\r\n//             )}\r\n//             {passwordError && (\r\n//               <div style={{ color: \"red\" }}>\r\n//                 <small>{passwordError}</small>\r\n//               </div>\r\n//             )}\r\n\r\n//             <label>Confirm Password</label>\r\n//             <input\r\n//               onChange={changeConfirmPassword}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"password\"\r\n//               placeholder=\"Enter your confirm password\"\r\n//               value={confirmPassword}\r\n//             />\r\n\r\n//             <button\r\n//               className=\"btn btn-secondary w-100\"\r\n//               type=\"submit\"\r\n//               style={{ backgroundColor: \"rgba(97, 124, 181, 1)\" }}\r\n//             >\r\n//               Signup\r\n//             </button>\r\n//             <p className=\"mt-4, \">\r\n//               Already have an account? <a href=\"/\">Login</a>\r\n//             </p>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { registerApi } from \"../../apis/Apis\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Register = () => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [passwordStrength, setPasswordStrength] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n  const changeFirstName = (e) => {\r\n    setFirstName(e.target.value);\r\n  };\r\n\r\n  const changeLastName = (e) => {\r\n    setLastName(e.target.value);\r\n  };\r\n\r\n  const changeEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const changePassword = (e) => {\r\n    const pwd = e.target.value;\r\n    setPassword(pwd);\r\n    evaluatePasswordStrength(pwd);\r\n  };\r\n\r\n  const changeConfirmPassword = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n  };\r\n\r\n  const evaluatePasswordStrength = (password) => {\r\n    const lengthRequirement = /.{8,12}/;\r\n    const uppercaseRequirement = /[A-Z]/;\r\n    const lowercaseRequirement = /[a-z]/;\r\n    const numberRequirement = /[0-9]/;\r\n    const specialCharRequirement = /[!@#$%^&*]/;\r\n\r\n    if (password.length < 8) {\r\n      setPasswordError(\"Password must be at least 8 characters long.\");\r\n      setPasswordStrength(\"Weak\");\r\n      return;\r\n    }\r\n\r\n    if (\r\n      lengthRequirement.test(password) &&\r\n      uppercaseRequirement.test(password) &&\r\n      lowercaseRequirement.test(password) &&\r\n      numberRequirement.test(password) &&\r\n      specialCharRequirement.test(password)\r\n    ) {\r\n      setPasswordStrength(\"Strong\");\r\n      setPasswordError(\"\");\r\n    } else if (\r\n      lengthRequirement.test(password) &&\r\n      (uppercaseRequirement.test(password) ||\r\n        lowercaseRequirement.test(password)) &&\r\n      (numberRequirement.test(password) || specialCharRequirement.test(password))\r\n    ) {\r\n      setPasswordStrength(\"Medium\");\r\n      setPasswordError(\"\");\r\n    } else {\r\n      setPasswordStrength(\"Weak\");\r\n      setPasswordError(\r\n        \"Password must contain uppercase, lowercase, numbers, and special characters.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!email.includes(\"@\")) {\r\n      toast.error(\"Invalid email format.\");\r\n      return;\r\n    }\r\n\r\n    if (passwordStrength === \"Weak\") {\r\n      toast.error(\"Password is too weak.\");\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      toast.error(\"Passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      email: email,\r\n      password: password,\r\n      confirmPassword: confirmPassword,\r\n    };\r\n\r\n    registerApi(data)\r\n      .then((res) => {\r\n        if (res.data.success) {\r\n          toast.success(res.data.message);\r\n        } else {\r\n          toast.error(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        toast.error(\"Internal Server Error!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <style>{`\r\n        .container-flex {\r\n          display: flex;\r\n          height: 100vh;\r\n          width: 100%;\r\n          align-items: stretch;\r\n        }\r\n        .left-side {\r\n          width: 50%;\r\n          background-image: url('/assets/images/Cover.jpg');\r\n          background-size: cover;\r\n          background-position: center;\r\n        }\r\n        .right-side {\r\n          width: 50%;\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          padding: 20px;\r\n        }\r\n        .register-form {\r\n          width: 75%;\r\n          max-width: 400px;\r\n        }\r\n        .form-control {\r\n          width: 100%;\r\n          padding: 8px;\r\n          margin-bottom: 15px;\r\n          border: 1px solid #ccc;\r\n          border-radius: 4px;\r\n        }\r\n        .btn-primary {\r\n          width: 100%;\r\n          padding: 10px;\r\n          background-color: #007bff;\r\n          border: none;\r\n          color: white;\r\n          cursor: pointer;\r\n          border-radius: 4px;\r\n        }\r\n        .btn-primary:hover {\r\n          background-color: #0056b3;\r\n        }\r\n        .password-strength-indicator {\r\n          background-color: #e0e0e0;\r\n          border-radius: 5px;\r\n          height: 10px;\r\n          position: relative;\r\n          margin-bottom: 15px;\r\n        }\r\n        .password-strength-fill {\r\n          height: 100%;\r\n          position: absolute;\r\n          border-radius: 5px;\r\n          transition: width 0.5s ease, background-color 0.5s ease;\r\n        }\r\n      `}</style>\r\n      <div className=\"container-flex\">\r\n        <div className=\"left-side\"></div>\r\n        <div className=\"right-side\">\r\n          <div className=\"register-form\">\r\n            <h1>Create an Account</h1>\r\n            <form onSubmit={handleSubmit}>\r\n              <input type=\"text\" className=\"form-control\" placeholder=\"First name\" value={firstName} onChange={changeFirstName} />\r\n              <input type=\"text\" className=\"form-control\" placeholder=\"Last name\" value={lastName} onChange={changeLastName} />\r\n              <input type=\"email\" className=\"form-control\" placeholder=\"Email\" value={email} onChange={changeEmail} />\r\n              <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value={password} onChange={changePassword} />\r\n              <div className=\"password-strength-indicator\">\r\n                <div className=\"password-strength-fill\" style={{ width: setPasswordStrength(passwordStrength), backgroundColor: setPasswordStrength(passwordStrength) }}></div>\r\n              </div>\r\n              <input type=\"password\" className=\"form-control\" placeholder=\"Confirm Password\" value={confirmPassword} onChange={changeConfirmPassword} />\r\n              <button type=\"submit\" className=\"btn btn-primary\">Sign Up</button>\r\n            </form>\r\n            <p>Already have an account? <a href=\"/\">Log in</a></p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}