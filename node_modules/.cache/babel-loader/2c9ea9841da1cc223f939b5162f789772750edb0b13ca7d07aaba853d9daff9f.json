{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sanjeela\\\\Desktop\\\\Security_CW2\\\\Frontend\\\\src\\\\pages\\\\user\\\\Resetpassword.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import { toast } from \"react-toastify\";\n// import { updatePasswordApi } from \"../../apis/Apis\";\n\n// const ResetPassword = () => {\n//   const [newPassword, setNewPassword] = useState(\"\");\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\n//   const [newPasswordVisible, setNewPasswordVisible] = useState(false);\n//   const [confirmPasswordVisible, setConfirmPasswordVisible] = useState(false);\n//   const navigate = useNavigate();\n//   const location = useLocation();\n\n//   const userEmail = location.state && location.state.User_email;\n\n//   const handleChangePassword = (e) => {\n//     setNewPassword(e.target.value);\n//   };\n\n//   const handleChangeConfirmPassword = (e) => {\n//     setConfirmPassword(e.target.value);\n//   };\n\n//   const handleChangePasswordSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       // Check if passwords match\n//       if (newPassword !== confirmPassword) {\n//         toast.error(\"Passwords do not match\");\n//         return;\n//       }\n\n//       const response = await updatePasswordApi({\n//         email: userEmail,\n//         password: newPassword,\n//       });\n\n//       if (response?.data?.success) {\n//         toast.success(response?.data?.message);\n//         navigate(\"/auth?mode=login\");\n//       } else {\n//         toast.error(response?.data?.message);\n//       }\n//     } catch (error) {\n//       console.error(error);\n//       toast.error(\"Server Error\");\n//     }\n//   };\n\n//   const toggleNewPasswordVisibility = () => {\n//     setNewPasswordVisible(!newPasswordVisible);\n//   };\n\n//   const toggleConfirmPasswordVisibility = () => {\n//     setConfirmPasswordVisible(!confirmPasswordVisible);\n//   };\n\n//   return (\n//     <div className=\"row vh-100 d-flex align-items-center justify-content-center\">\n//       <div className=\"col-md-5 bg-white p-5\">\n//         <p className=\"text-center my-4 font-primary tw-text-blue tw-text-4xl\">\n//           <u>Create New Password</u>\n//         </p>\n//         <form\n//           onSubmit={handleChangePasswordSubmit}\n//           className=\"px-3\"\n//           style={{\n//             display: \"flex\",\n//             flexDirection: \"column\",\n//             justifyContent: \"center\",\n//             alignItems: \"center\",\n//           }}\n//         >\n//           <div className=\"tw-flex tw-items-center tw-flex-col\">\n//             <div>\n//               <b className=\"tw-text-blue tw-font-secondary tw-mt-5\">\n//                 Enter password\n//               </b>\n//               <div className=\"tw-flex tw-items-center tw-mb-5\">\n//                 <input\n//                   type={newPasswordVisible ? \"text\" : \"password\"}\n//                   className=\"tw-border-none tw-p-2 focus:tw-outline-none\"\n//                   value={newPassword}\n//                   onChange={handleChangePassword}\n//                   placeholder=\"Password\"\n//                   style={{\n//                     backgroundColor: \"#F3F4F4\",\n//                     color: \"#A8AAAA\",\n//                     border: \"none\",\n//                     marginRight: \"2px\",\n//                     padding: \"3px 10px\",\n//                     width: \"280px\",\n//                   }}\n//                 />\n//                 <div\n//                   className=\"tw-bg-gray-100\"\n//                   style={{\n//                     display: \"flex\",\n//                     justifyContent: \"center\",\n//                     alignItems: \"center\",\n//                     backgroundColor: \"#F3F4F4\",\n//                     padding: \"5px\",\n//                     cursor: \"pointer\",\n//                   }}\n//                   onClick={toggleNewPasswordVisibility}\n//                 >\n//                   <img\n//                     src={\n//                       newPasswordVisible\n//                         ? \"/assets/svg/eye.svg\"\n//                         : \"/assets/svg/eye-crossed.svg\"\n//                     }\n//                     style={{\n//                       height: \"20px\",\n//                     }}\n//                   />\n//                 </div>\n//               </div>\n//             </div>\n//             <div className=\"tw-mb-4\">\n//               <b className=\"tw-text-blue tw-font-secondary tw-mt-5\">\n//                 Confirm new password\n//               </b>\n//               <div className=\"tw-flex tw-items-center\">\n//                 <input\n//                   type={confirmPasswordVisible ? \"text\" : \"password\"}\n//                   className=\"tw-border-none tw-p-2 focus:tw-outline-none\"\n//                   value={confirmPassword}\n//                   onChange={handleChangeConfirmPassword}\n//                   placeholder=\"Confirm password\"\n//                   style={{\n//                     backgroundColor: \"#F3F4F4\",\n//                     color: \"#A8AAAA\",\n//                     border: \"none\",\n//                     marginRight: \"2px\",\n//                     padding: \"3px 10px\",\n//                     width: \"280px\",\n//                   }}\n//                 />\n//                 <div\n//                   className=\"tw-bg-gray-100\"\n//                   style={{\n//                     display: \"flex\",\n//                     justifyContent: \"center\",\n//                     alignItems: \"center\",\n//                     backgroundColor: \"#F3F4F4\",\n//                     padding: \"5px\",\n//                     cursor: \"pointer\",\n//                   }}\n//                   onClick={toggleConfirmPasswordVisibility}\n//                 >\n//                   <img\n//                     src={\n//                       confirmPasswordVisible\n//                         ? \"/assets/svg/eye.svg\"\n//                         : \"/assets/svg/eye-crossed.svg\"\n//                     }\n//                     style={{\n//                       height: \"20px\",\n//                     }}\n//                   />\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//           <button\n//             className=\"btn btn-blue tw-text-sm tw-mt-3 font-primary\"\n//             type=\"submit\"\n//           >\n//             Submit\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ResetPassword;\n\nimport React, { useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { updatePasswordApi } from \"../../apis/Apis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [newPasswordVisible, setNewPasswordVisible] = useState(false);\n  const [confirmPasswordVisible, setConfirmPasswordVisible] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const userEmail = location.state && location.state.User_email;\n  const handleChangePassword = e => setNewPassword(e.target.value);\n  const handleChangeConfirmPassword = e => setConfirmPassword(e.target.value);\n  const handleChangePasswordSubmit = async e => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      toast.error(\"Passwords do not match\");\n      return;\n    }\n    try {\n      var _response$data;\n      const response = await updatePasswordApi({\n        email: userEmail,\n        password: newPassword\n      });\n      if (response !== null && response !== void 0 && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.success) {\n        var _response$data2;\n        toast.success(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.message);\n        navigate(\"/auth?mode=login\");\n      } else {\n        var _response$data3;\n        toast.error(response === null || response === void 0 ? void 0 : (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.message);\n      }\n    } catch (error) {\n      console.error(\"Error during password reset:\", error);\n      toast.error(\"Server Error\");\n    }\n  };\n  const toggleNewPasswordVisibility = () => setNewPasswordVisible(!newPasswordVisible);\n  const toggleConfirmPasswordVisibility = () => setConfirmPasswordVisible(!confirmPasswordVisible);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row vh-100 d-flex align-items-center justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-5 bg-white p-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center my-4 font-primary tw-text-blue tw-text-4xl\",\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"Create New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleChangePasswordSubmit,\n        className: \"px-3 d-flex flex-column align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tw-flex tw-flex-col tw-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              className: \"tw-text-blue tw-font-secondary tw-mt-5\",\n              children: \"Enter password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tw-flex tw-items-center tw-mb-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: newPasswordVisible ? \"text\" : \"password\",\n                className: \"tw-border-none tw-p-2 focus:tw-outline-none\",\n                value: newPassword,\n                onChange: handleChangePassword,\n                placeholder: \"Password\",\n                style: {\n                  backgroundColor: \"#F3F4F4\",\n                  color: \"#A8AAAA\",\n                  border: \"none\",\n                  marginRight: \"2px\",\n                  padding: \"3px 10px\",\n                  width: \"280px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tw-bg-gray-100 tw-flex-center\",\n                style: {\n                  backgroundColor: \"#F3F4F4\",\n                  padding: \"5px\",\n                  cursor: \"pointer\"\n                },\n                onClick: toggleNewPasswordVisibility,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: newPasswordVisible ? \"/assets/svg/eye.svg\" : \"/assets/svg/eye-crossed.svg\",\n                  alt: \"Toggle visibility\",\n                  style: {\n                    height: \"20px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tw-mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              className: \"tw-text-blue tw-font-secondary tw-mt-5\",\n              children: \"Confirm new password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tw-flex tw-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: confirmPasswordVisible ? \"text\" : \"password\",\n                className: \"tw-border-none tw-p-2 focus:tw-outline-none\",\n                value: confirmPassword,\n                onChange: handleChangeConfirmPassword,\n                placeholder: \"Confirm password\",\n                style: {\n                  backgroundColor: \"#F3F4F4\",\n                  color: \"#A8AAAA\",\n                  border: \"none\",\n                  marginRight: \"2px\",\n                  padding: \"3px 10px\",\n                  width: \"280px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tw-bg-gray-100 tw-flex-center\",\n                style: {\n                  backgroundColor: \"#F3F4F4\",\n                  padding: \"5px\",\n                  cursor: \"pointer\"\n                },\n                onClick: toggleConfirmPasswordVisibility,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: confirmPasswordVisible ? \"/assets/svg/eye.svg\" : \"/assets/svg/eye-crossed.svg\",\n                  alt: \"Toggle visibility\",\n                  style: {\n                    height: \"20px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-blue tw-text-sm tw-mt-3 font-primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"ZC0d3IYTmTwnxzZlmeFunzNsJiI=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","toast","updatePasswordApi","jsxDEV","_jsxDEV","ResetPassword","_s","newPassword","setNewPassword","confirmPassword","setConfirmPassword","newPasswordVisible","setNewPasswordVisible","confirmPasswordVisible","setConfirmPasswordVisible","navigate","location","userEmail","state","User_email","handleChangePassword","e","target","value","handleChangeConfirmPassword","handleChangePasswordSubmit","preventDefault","error","_response$data","response","email","password","data","success","_response$data2","message","_response$data3","console","toggleNewPasswordVisibility","toggleConfirmPasswordVisibility","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","style","backgroundColor","color","border","marginRight","padding","width","cursor","onClick","src","alt","height","_c","$RefreshReg$"],"sources":["C:/Users/Sanjeela/Desktop/Security_CW2/Frontend/src/pages/user/Resetpassword.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useLocation, useNavigate } from \"react-router-dom\";\r\n// import { toast } from \"react-toastify\";\r\n// import { updatePasswordApi } from \"../../apis/Apis\";\r\n\r\n// const ResetPassword = () => {\r\n//   const [newPassword, setNewPassword] = useState(\"\");\r\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n//   const [newPasswordVisible, setNewPasswordVisible] = useState(false);\r\n//   const [confirmPasswordVisible, setConfirmPasswordVisible] = useState(false);\r\n//   const navigate = useNavigate();\r\n//   const location = useLocation();\r\n\r\n//   const userEmail = location.state && location.state.User_email;\r\n\r\n//   const handleChangePassword = (e) => {\r\n//     setNewPassword(e.target.value);\r\n//   };\r\n\r\n//   const handleChangeConfirmPassword = (e) => {\r\n//     setConfirmPassword(e.target.value);\r\n//   };\r\n\r\n//   const handleChangePasswordSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//       // Check if passwords match\r\n//       if (newPassword !== confirmPassword) {\r\n//         toast.error(\"Passwords do not match\");\r\n//         return;\r\n//       }\r\n\r\n//       const response = await updatePasswordApi({\r\n//         email: userEmail,\r\n//         password: newPassword,\r\n//       });\r\n\r\n//       if (response?.data?.success) {\r\n//         toast.success(response?.data?.message);\r\n//         navigate(\"/auth?mode=login\");\r\n//       } else {\r\n//         toast.error(response?.data?.message);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       toast.error(\"Server Error\");\r\n//     }\r\n//   };\r\n\r\n//   const toggleNewPasswordVisibility = () => {\r\n//     setNewPasswordVisible(!newPasswordVisible);\r\n//   };\r\n\r\n//   const toggleConfirmPasswordVisibility = () => {\r\n//     setConfirmPasswordVisible(!confirmPasswordVisible);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"row vh-100 d-flex align-items-center justify-content-center\">\r\n//       <div className=\"col-md-5 bg-white p-5\">\r\n//         <p className=\"text-center my-4 font-primary tw-text-blue tw-text-4xl\">\r\n//           <u>Create New Password</u>\r\n//         </p>\r\n//         <form\r\n//           onSubmit={handleChangePasswordSubmit}\r\n//           className=\"px-3\"\r\n//           style={{\r\n//             display: \"flex\",\r\n//             flexDirection: \"column\",\r\n//             justifyContent: \"center\",\r\n//             alignItems: \"center\",\r\n//           }}\r\n//         >\r\n//           <div className=\"tw-flex tw-items-center tw-flex-col\">\r\n//             <div>\r\n//               <b className=\"tw-text-blue tw-font-secondary tw-mt-5\">\r\n//                 Enter password\r\n//               </b>\r\n//               <div className=\"tw-flex tw-items-center tw-mb-5\">\r\n//                 <input\r\n//                   type={newPasswordVisible ? \"text\" : \"password\"}\r\n//                   className=\"tw-border-none tw-p-2 focus:tw-outline-none\"\r\n//                   value={newPassword}\r\n//                   onChange={handleChangePassword}\r\n//                   placeholder=\"Password\"\r\n//                   style={{\r\n//                     backgroundColor: \"#F3F4F4\",\r\n//                     color: \"#A8AAAA\",\r\n//                     border: \"none\",\r\n//                     marginRight: \"2px\",\r\n//                     padding: \"3px 10px\",\r\n//                     width: \"280px\",\r\n//                   }}\r\n//                 />\r\n//                 <div\r\n//                   className=\"tw-bg-gray-100\"\r\n//                   style={{\r\n//                     display: \"flex\",\r\n//                     justifyContent: \"center\",\r\n//                     alignItems: \"center\",\r\n//                     backgroundColor: \"#F3F4F4\",\r\n//                     padding: \"5px\",\r\n//                     cursor: \"pointer\",\r\n//                   }}\r\n//                   onClick={toggleNewPasswordVisibility}\r\n//                 >\r\n//                   <img\r\n//                     src={\r\n//                       newPasswordVisible\r\n//                         ? \"/assets/svg/eye.svg\"\r\n//                         : \"/assets/svg/eye-crossed.svg\"\r\n//                     }\r\n//                     style={{\r\n//                       height: \"20px\",\r\n//                     }}\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"tw-mb-4\">\r\n//               <b className=\"tw-text-blue tw-font-secondary tw-mt-5\">\r\n//                 Confirm new password\r\n//               </b>\r\n//               <div className=\"tw-flex tw-items-center\">\r\n//                 <input\r\n//                   type={confirmPasswordVisible ? \"text\" : \"password\"}\r\n//                   className=\"tw-border-none tw-p-2 focus:tw-outline-none\"\r\n//                   value={confirmPassword}\r\n//                   onChange={handleChangeConfirmPassword}\r\n//                   placeholder=\"Confirm password\"\r\n//                   style={{\r\n//                     backgroundColor: \"#F3F4F4\",\r\n//                     color: \"#A8AAAA\",\r\n//                     border: \"none\",\r\n//                     marginRight: \"2px\",\r\n//                     padding: \"3px 10px\",\r\n//                     width: \"280px\",\r\n//                   }}\r\n//                 />\r\n//                 <div\r\n//                   className=\"tw-bg-gray-100\"\r\n//                   style={{\r\n//                     display: \"flex\",\r\n//                     justifyContent: \"center\",\r\n//                     alignItems: \"center\",\r\n//                     backgroundColor: \"#F3F4F4\",\r\n//                     padding: \"5px\",\r\n//                     cursor: \"pointer\",\r\n//                   }}\r\n//                   onClick={toggleConfirmPasswordVisibility}\r\n//                 >\r\n//                   <img\r\n//                     src={\r\n//                       confirmPasswordVisible\r\n//                         ? \"/assets/svg/eye.svg\"\r\n//                         : \"/assets/svg/eye-crossed.svg\"\r\n//                     }\r\n//                     style={{\r\n//                       height: \"20px\",\r\n//                     }}\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           <button\r\n//             className=\"btn btn-blue tw-text-sm tw-mt-3 font-primary\"\r\n//             type=\"submit\"\r\n//           >\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ResetPassword;\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { updatePasswordApi } from \"../../apis/Apis\";\r\n\r\nconst ResetPassword = () => {\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [newPasswordVisible, setNewPasswordVisible] = useState(false);\r\n  const [confirmPasswordVisible, setConfirmPasswordVisible] = useState(false);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const userEmail = location.state && location.state.User_email;\r\n\r\n  const handleChangePassword = (e) => setNewPassword(e.target.value);\r\n\r\n  const handleChangeConfirmPassword = (e) => setConfirmPassword(e.target.value);\r\n\r\n  const handleChangePasswordSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      toast.error(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await updatePasswordApi({\r\n        email: userEmail,\r\n        password: newPassword,\r\n      });\r\n\r\n      if (response?.data?.success) {\r\n        toast.success(response?.data?.message);\r\n        navigate(\"/auth?mode=login\");\r\n      } else {\r\n        toast.error(response?.data?.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during password reset:\", error);\r\n      toast.error(\"Server Error\");\r\n    }\r\n  };\r\n\r\n  const toggleNewPasswordVisibility = () => setNewPasswordVisible(!newPasswordVisible);\r\n\r\n  const toggleConfirmPasswordVisibility = () => setConfirmPasswordVisible(!confirmPasswordVisible);\r\n\r\n  return (\r\n    <div className=\"row vh-100 d-flex align-items-center justify-content-center\">\r\n      <div className=\"col-md-5 bg-white p-5\">\r\n        <p className=\"text-center my-4 font-primary tw-text-blue tw-text-4xl\">\r\n          <u>Create New Password</u>\r\n        </p>\r\n        <form onSubmit={handleChangePasswordSubmit} className=\"px-3 d-flex flex-column align-items-center\">\r\n          <div className=\"tw-flex tw-flex-col tw-items-center\">\r\n            <div>\r\n              <b className=\"tw-text-blue tw-font-secondary tw-mt-5\">Enter password</b>\r\n              <div className=\"tw-flex tw-items-center tw-mb-5\">\r\n                <input\r\n                  type={newPasswordVisible ? \"text\" : \"password\"}\r\n                  className=\"tw-border-none tw-p-2 focus:tw-outline-none\"\r\n                  value={newPassword}\r\n                  onChange={handleChangePassword}\r\n                  placeholder=\"Password\"\r\n                  style={{ backgroundColor: \"#F3F4F4\", color: \"#A8AAAA\", border: \"none\", marginRight: \"2px\", padding: \"3px 10px\", width: \"280px\" }}\r\n                />\r\n                <div\r\n                  className=\"tw-bg-gray-100 tw-flex-center\"\r\n                  style={{ backgroundColor: \"#F3F4F4\", padding: \"5px\", cursor: \"pointer\" }}\r\n                  onClick={toggleNewPasswordVisibility}\r\n                >\r\n                  <img\r\n                    src={newPasswordVisible ? \"/assets/svg/eye.svg\" : \"/assets/svg/eye-crossed.svg\"}\r\n                    alt=\"Toggle visibility\"\r\n                    style={{ height: \"20px\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"tw-mb-4\">\r\n              <b className=\"tw-text-blue tw-font-secondary tw-mt-5\">Confirm new password</b>\r\n              <div className=\"tw-flex tw-items-center\">\r\n                <input\r\n                  type={confirmPasswordVisible ? \"text\" : \"password\"}\r\n                  className=\"tw-border-none tw-p-2 focus:tw-outline-none\"\r\n                  value={confirmPassword}\r\n                  onChange={handleChangeConfirmPassword}\r\n                  placeholder=\"Confirm password\"\r\n                  style={{ backgroundColor: \"#F3F4F4\", color: \"#A8AAAA\", border: \"none\", marginRight: \"2px\", padding: \"3px 10px\", width: \"280px\" }}\r\n                />\r\n                <div\r\n                  className=\"tw-bg-gray-100 tw-flex-center\"\r\n                  style={{ backgroundColor: \"#F3F4F4\", padding: \"5px\", cursor: \"pointer\" }}\r\n                  onClick={toggleConfirmPasswordVisibility}\r\n                >\r\n                  <img\r\n                    src={confirmPasswordVisible ? \"/assets/svg/eye.svg\" : \"/assets/svg/eye-crossed.svg\"}\r\n                    alt=\"Toggle visibility\"\r\n                    style={{ height: \"20px\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn btn-blue tw-text-sm tw-mt-3 font-primary\" type=\"submit\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,iBAAiB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,C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"},"metadata":{},"sourceType":"module","externalDependencies":[]}