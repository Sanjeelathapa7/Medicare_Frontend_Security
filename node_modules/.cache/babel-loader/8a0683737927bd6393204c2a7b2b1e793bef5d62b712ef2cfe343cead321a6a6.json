{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sanjeela\\\\Desktop\\\\Security_CW2\\\\Frontend\\\\src\\\\pages\\\\user\\\\Register.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { registerApi } from \"../../apis/Apis\";\n// import { toast } from \"react-toastify\";\n\n// const Register = () => {\n//   const [firstName, setFirstName] = useState(\"\");\n//   const [lastName, setLastName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n//   const changeFirstName = (e) => {\n//     setFirstName(e.target.value);\n//   };\n\n//   const changeLastName = (e) => {\n//     setLastName(e.target.value);\n//   };\n\n//   const changeEmail = (e) => {\n//     setEmail(e.target.value);\n//   };\n\n//   const changePassword = (e) => {\n//     setPassword(e.target.value);\n//   };\n\n//   const changeconfirmPassword = (e) => {\n//     setConfirmPassword(e.target.value);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     const data = {\n//       firstName: firstName,\n//       lastName: lastName,\n//       email: email,\n//       password: password,\n//       confirmPassword: confirmPassword,\n//     };\n\n//     registerApi(data)\n//       .then((res) => {\n//         if (res.data.success === true) {\n//           toast.success(res.data.message);\n//         } else {\n//           toast.error(res.data.message);\n//         }\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//         toast.error(\"Internal Server Error!\");\n//       });\n//   };\n\n//   return (\n//     <div className=\"d-flex justify-content-center align-items-center vh-100\">\n//       <div\n//         className=\"d-flex\"\n//         style={{\n//           boxShadow: \"0px 0px 10px 0px rgba(0,0,0,0.2)\",\n//           padding: \"20px\",\n//           borderRadius: \"10px\",\n//         }}\n//       >\n//         {/* Left side with image */}\n//         <div className=\"w-50\" style={{ marginRight: \"20px\" }}>\n//           <img\n//             src=\"/assets/images/Cover.jpg\"\n//             alt=\"Cover Page\"\n//             className=\"w-100 h-100\"\n//           />\n//         </div>\n\n//         {/* Right side with form */}\n//         <div className=\"w-50\">\n//           <h1 className=\"m-4\">Create an Account</h1>\n//           <form className=\"w-75\">\n//             <label>Firstname</label>\n//             <input\n//               onChange={changeFirstName}\n//               className=\"form-control mb-2\"\n//               type=\"text\"\n//               placeholder=\"Enter your firstname\"\n//             />\n\n//             <label>Lastname</label>\n//             <input\n//               onChange={changeLastName}\n//               className=\"form-control mb-2\"\n//               type=\"text\"\n//               placeholder=\"Enter your lastname\"\n//             />\n\n//             <label>Email</label>\n//             <input\n//               onChange={changeEmail}\n//               className=\"form-control mb-2\"\n//               type=\"email\"\n//               placeholder=\"Enter your email\"\n//             />\n\n//             <label>Password</label>\n//             <input\n//               onChange={changePassword}\n//               className=\"form-control mb-2\"\n//               type=\"password\"\n//               placeholder=\"Enter your password\"\n//             />\n\n//             <label>Confirm Password</label>\n//             <input\n//               onChange={changeconfirmPassword}\n//               className=\"form-control mb-2\"\n//               type=\"password\"\n//               placeholder=\"Enter your confirm password\"\n//             />\n\n//             <button\n//               onClick={handleSubmit}\n//               className=\"btn btn-secondary w-100\"\n//               type=\"submit\"\n//               style={{ backgroundColor: \"rgba(97, 124, 181, 1)\" }}\n//             >\n//               Signup\n//             </button>\n//             <p className=\"mt-4, \">\n//               Already have an account? <a href=\"/\">Login</a>\n//             </p>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Register;\n\n// import React, { useState } from \"react\";\n// import { registerApi } from \"../../apis/Apis\";\n// import { toast } from \"react-toastify\";\n\n// const Register = () => {\n//   const [firstName, setFirstName] = useState(\"\");\n//   const [lastName, setLastName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\n//   const [passwordStrength, setPasswordStrength] = useState(\"\");\n\n//   const changeFirstName = (e) => {\n//     setFirstName(e.target.value);\n//   };\n\n//   const changeLastName = (e) => {\n//     setLastName(e.target.value);\n//   };\n\n//   const changeEmail = (e) => {\n//     setEmail(e.target.value);\n//   };\n\n//   const changePassword = (e) => {\n//     const pwd = e.target.value;\n//     setPassword(pwd);\n//     evaluatePasswordStrength(pwd);\n//   };\n\n//   const changeConfirmPassword = (e) => {\n//     setConfirmPassword(e.target.value);\n//   };\n\n//   const evaluatePasswordStrength = (password) => {\n//     const lengthRequirement = /.{8,12}/;\n//     const uppercaseRequirement = /[A-Z]/;\n//     const lowercaseRequirement = /[a-z]/;\n//     const numberRequirement = /[0-9]/;\n//     const specialCharRequirement = /[!@#$%^&*]/;\n\n//     if (\n//       lengthRequirement.test(password) &&\n//       uppercaseRequirement.test(password) &&\n//       lowercaseRequirement.test(password) &&\n//       numberRequirement.test(password) &&\n//       specialCharRequirement.test(password)\n//     ) {\n//       setPasswordStrength(\"Strong\");\n//     } else if (\n//       lengthRequirement.test(password) &&\n//       (uppercaseRequirement.test(password) ||\n//         lowercaseRequirement.test(password)) &&\n//       (numberRequirement.test(password) || specialCharRequirement.test(password))\n//     ) {\n//       setPasswordStrength(\"Medium\");\n//     } else {\n//       setPasswordStrength(\"Weak\");\n//     }\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     if (!email.includes(\"@\")) {\n//       toast.error(\"Invalid email format.\");\n//       return;\n//     }\n\n//     if (passwordStrength === \"Weak\") {\n//       toast.error(\"Password is too weak.\");\n//       return;\n//     }\n\n//     if (password !== confirmPassword) {\n//       toast.error(\"Passwords do not match.\");\n//       return;\n//     }\n\n//     const data = {\n//       firstName: firstName,\n//       lastName: lastName,\n//       email: email,\n//       password: password,\n//       confirmPassword: confirmPassword,\n//     };\n\n//     registerApi(data)\n//       .then((res) => {\n//         if (res.data.success === true) {\n//           toast.success(res.data.message);\n//         } else {\n//           toast.error(res.data.message);\n//         }\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//         toast.error(\"Internal Server Error!\");\n//       });\n//   };\n\n//   return (\n//     <div className=\"d-flex justify-content-center align-items-center vh-100\">\n//       <div\n//         className=\"d-flex\"\n//         style={{\n//           boxShadow: \"0px 0px 10px 0px rgba(0,0,0,0.2)\",\n//           padding: \"20px\",\n//           borderRadius: \"10px\",\n//         }}\n//       >\n//         {/* Left side with image */}\n//         <div className=\"w-50\" style={{ marginRight: \"20px\" }}>\n//           <img\n//             src=\"/assets/images/Cover.jpg\"\n//             alt=\"Cover Page\"\n//             className=\"w-100 h-100\"\n//           />\n//         </div>\n\n//         {/* Right side with form */}\n//         <div className=\"w-50\">\n//           <h1 className=\"m-4\">Create an Account</h1>\n//           <form className=\"w-75\" onSubmit={handleSubmit}>\n//             <label>Firstname</label>\n//             <input\n//               onChange={changeFirstName}\n//               className=\"form-control mb-2\"\n//               type=\"text\"\n//               placeholder=\"Enter your firstname\"\n//               value={firstName}\n//             />\n\n//             <label>Lastname</label>\n//             <input\n//               onChange={changeLastName}\n//               className=\"form-control mb-2\"\n//               type=\"text\"\n//               placeholder=\"Enter your lastname\"\n//               value={lastName}\n//             />\n\n//             <label>Email</label>\n//             <input\n//               onChange={changeEmail}\n//               className=\"form-control mb-2\"\n//               type=\"email\"\n//               placeholder=\"Enter your email\"\n//               value={email}\n//             />\n\n//             <label>Password</label>\n//             <input\n//               onChange={changePassword}\n//               className=\"form-control mb-2\"\n//               type=\"password\"\n//               placeholder=\"Enter your password\"\n//               value={password}\n//             />\n//             <div className={`mb-2 ${passwordStrength}`}>\n//               Password Strength: <strong>{passwordStrength}</strong>\n//             </div>\n\n//             <label>Confirm Password</label>\n//             <input\n//               onChange={changeConfirmPassword}\n//               className=\"form-control mb-2\"\n//               type=\"password\"\n//               placeholder=\"Enter your confirm password\"\n//               value={confirmPassword}\n//             />\n\n//             <button\n//               className=\"btn btn-secondary w-100\"\n//               type=\"submit\"\n//               style={{ backgroundColor: \"rgba(97, 124, 181, 1)\" }}\n//             >\n//               Signup\n//             </button>\n//             <p className=\"mt-4, \">\n//               Already have an account? <a href=\"/\">Login</a>\n//             </p>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Register;\n\n// import React, { useState } from \"react\";\n// import { registerApi } from \"../../apis/Apis\";\n// import { toast } from \"react-toastify\";\n\n// const Register = () => {\n//   const [firstName, setFirstName] = useState(\"\");\n//   const [lastName, setLastName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\n//   const [passwordStrength, setPasswordStrength] = useState(\"\");\n//   const [passwordError, setPasswordError] = useState(\"\");\n\n//   const changeFirstName = (e) => {\n//     setFirstName(e.target.value);\n//   };\n\n//   const changeLastName = (e) => {\n//     setLastName(e.target.value);\n//   };\n\n//   const changeEmail = (e) => {\n//     setEmail(e.target.value);\n//   };\n\n//   const changePassword = (e) => {\n//     const pwd = e.target.value;\n//     setPassword(pwd);\n//     evaluatePasswordStrength(pwd);\n//   };\n\n//   const changeConfirmPassword = (e) => {\n//     setConfirmPassword(e.target.value);\n//   };\n\n//   const evaluatePasswordStrength = (password) => {\n//     const lengthRequirement = /.{8,12}/;\n//     const uppercaseRequirement = /[A-Z]/;\n//     const lowercaseRequirement = /[a-z]/;\n//     const numberRequirement = /[0-9]/;\n//     const specialCharRequirement = /[!@#$%^&*]/;\n\n//     if (password.length < 8) {\n//       setPasswordError(\"Password must be at least 8 characters long.\");\n//       setPasswordStrength(\"Weak\");\n//       return;\n//     }\n\n//     if (\n//       lengthRequirement.test(password) &&\n//       uppercaseRequirement.test(password) &&\n//       lowercaseRequirement.test(password) &&\n//       numberRequirement.test(password) &&\n//       specialCharRequirement.test(password)\n//     ) {\n//       setPasswordStrength(\"Strong\");\n//       setPasswordError(\"\");\n//     } else if (\n//       lengthRequirement.test(password) &&\n//       (uppercaseRequirement.test(password) ||\n//         lowercaseRequirement.test(password)) &&\n//       (numberRequirement.test(password) || specialCharRequirement.test(password))\n//     ) {\n//       setPasswordStrength(\"Medium\");\n//       setPasswordError(\"\");\n//     } else {\n//       setPasswordStrength(\"Weak\");\n//       setPasswordError(\n//         \"Password must contain uppercase, lowercase, numbers, and special characters.\"\n//       );\n//     }\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     if (!email.includes(\"@\")) {\n//       toast.error(\"Invalid email format.\");\n//       return;\n//     }\n\n//     if (passwordStrength === \"Weak\") {\n//       toast.error(\"Password is too weak.\");\n//       return;\n//     }\n\n//     if (password !== confirmPassword) {\n//       toast.error(\"Passwords do not match.\");\n//       return;\n//     }\n\n//     const data = {\n//       firstName: firstName,\n//       lastName: lastName,\n//       email: email,\n//       password: password,\n//       confirmPassword: confirmPassword,\n//     };\n\n//     registerApi(data)\n//       .then((res) => {\n//         if (res.data.success === true) {\n//           toast.success(res.data.message);\n//         } else {\n//           toast.error(res.data.message);\n//         }\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//         toast.error(\"Internal Server Error!\");\n//       });\n//   };\n\n//   return (\n//     <div className=\"d-flex justify-content-center align-items-center vh-100\">\n//       <div\n//         className=\"d-flex\"\n//         style={{\n//           boxShadow: \"0px 0px 10px 0px rgba(0,0,0,0.2)\",\n//           padding: \"20px\",\n//           borderRadius: \"10px\",\n//         }}\n//       >\n//         {/* Left side with image */}\n//         <div className=\"w-50\" style={{ marginRight: \"20px\" }}>\n//           <img\n//             src=\"/assets/images/Cover.jpg\"\n//             alt=\"Cover Page\"\n//             className=\"w-100 h-100\"\n//           />\n//         </div>\n\n//         {/* Right side with form */}\n//         <div className=\"w-50\">\n//           <h1 className=\"m-4\">Create an Account</h1>\n//           <form className=\"w-75\" onSubmit={handleSubmit}>\n//             <label>Firstname</label>\n//             <input\n//               onChange={changeFirstName}\n//               className=\"form-control mb-2\"\n//               type=\"text\"\n//               placeholder=\"Enter your firstname\"\n//               value={firstName}\n//             />\n\n//             <label>Lastname</label>\n//             <input\n//               onChange={changeLastName}\n//               className=\"form-control mb-2\"\n//               type=\"text\"\n//               placeholder=\"Enter your lastname\"\n//               value={lastName}\n//             />\n\n//             <label>Email</label>\n//             <input\n//               onChange={changeEmail}\n//               className=\"form-control mb-2\"\n//               type=\"email\"\n//               placeholder=\"Enter your email\"\n//               value={email}\n//             />\n\n//             <label>Password</label>\n//             <input\n//               onChange={changePassword}\n//               className=\"form-control mb-2\"\n//               type=\"password\"\n//               placeholder=\"Enter your password\"\n//               value={password}\n//             />\n//             <div\n//               className=\"mb-2\"\n//               style={{\n//                 color:\n//                   passwordStrength === \"Strong\"\n//                     ? \"green\"\n//                     : passwordStrength === \"Medium\"\n//                     ? \"orange\"\n//                     : \"red\",\n//               }}\n//             >\n//               Password Strength: <strong>{passwordStrength}</strong>\n//             </div>\n//             {passwordError && (\n//               <div style={{ color: \"red\" }}>\n//                 <small>{passwordError}</small>\n//               </div>\n//             )}\n\n//             <label>Confirm Password</label>\n//             <input\n//               onChange={changeConfirmPassword}\n//               className=\"form-control mb-2\"\n//               type=\"password\"\n//               placeholder=\"Enter your confirm password\"\n//               value={confirmPassword}\n//             />\n\n//             <button\n//               className=\"btn btn-secondary w-100\"\n//               type=\"submit\"\n//               style={{ backgroundColor: \"rgba(97, 124, 181, 1)\" }}\n//             >\n//               Signup\n//             </button>\n//             <p className=\"mt-4, \">\n//               Already have an account? <a href=\"/\">Login</a>\n//             </p>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Register;\n\nimport React, { useState } from \"react\";\nimport { registerApi } from \"../../apis/Apis\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordStrength, setPasswordStrength] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const changeFirstName = e => {\n    setFirstName(e.target.value);\n  };\n  const changeLastName = e => {\n    setLastName(e.target.value);\n  };\n  const changeEmail = e => {\n    setEmail(e.target.value);\n  };\n  const changePassword = e => {\n    const pwd = e.target.value;\n    setPassword(pwd);\n    evaluatePasswordStrength(pwd);\n  };\n  const changeConfirmPassword = e => {\n    setConfirmPassword(e.target.value);\n  };\n  const evaluatePasswordStrength = password => {\n    const lengthRequirement = /.{8,12}/;\n    const uppercaseRequirement = /[A-Z]/;\n    const lowercaseRequirement = /[a-z]/;\n    const numberRequirement = /[0-9]/;\n    const specialCharRequirement = /[!@#$%^&*]/;\n    if (password.length < 8) {\n      setPasswordError(\"Password must be at least 8 characters long.\");\n      setPasswordStrength(\"Weak\");\n      return;\n    }\n    if (lengthRequirement.test(password) && uppercaseRequirement.test(password) && lowercaseRequirement.test(password) && numberRequirement.test(password) && specialCharRequirement.test(password)) {\n      setPasswordStrength(\"Strong\");\n      setPasswordError(\"\");\n    } else if (lengthRequirement.test(password) && (uppercaseRequirement.test(password) || lowercaseRequirement.test(password)) && (numberRequirement.test(password) || specialCharRequirement.test(password))) {\n      setPasswordStrength(\"Medium\");\n      setPasswordError(\"\");\n    } else {\n      setPasswordStrength(\"Weak\");\n      setPasswordError(\"Password must contain uppercase, lowercase, numbers, and special characters.\");\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!email.includes(\"@\")) {\n      toast.error(\"Invalid email format.\");\n      return;\n    }\n    if (passwordStrength === \"Weak\") {\n      toast.error(\"Password is too weak.\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      toast.error(\"Passwords do not match.\");\n      return;\n    }\n    const data = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password,\n      confirmPassword: confirmPassword\n    };\n    registerApi(data).then(res => {\n      if (res.data.success === true) {\n        toast.success(res.data.message);\n      } else {\n        toast.error(res.data.message);\n      }\n    }).catch(err => {\n      console.log(err);\n      toast.error(\"Internal Server Error!\");\n    });\n  };\n\n  // Determine the background color of the password strength indicator based on password strength\n  const getPasswordStrengthColor = strength => {\n    switch (strength) {\n      case \"Strong\":\n        return \"green\";\n      case \"Medium\":\n        return \"orange\";\n      case \"Weak\":\n      default:\n        return \"red\";\n    }\n  };\n\n  // Determine the width of the filled portion of the password strength bar based on password strength\n  const getPasswordStrengthWidth = strength => {\n    switch (strength) {\n      case \"Strong\":\n        return \"100%\";\n      case \"Medium\":\n        return \"66%\";\n      case \"Weak\":\n      default:\n        return \"33%\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center align-items-center vh-80\",\n    style: {\n      overflow: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-100\",\n      style: {\n        width: \"50%\",\n        marginRight: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/assets/images/Cover.jpg\",\n        alt: \"Cover Page\",\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          objectFit: \"cover\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"50%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create an Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"w-75\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Firstname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control mb-2\",\n              placeholder: \"Enter your firstname\",\n              value: firstName,\n              onChange: changeFirstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Lastname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 719,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control mb-2\",\n              placeholder: \"Enter your lastname\",\n              value: lastName,\n              onChange: changeLastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 720,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control mb-2\",\n              placeholder: \"Enter your email\",\n              value: email,\n              onChange: changeEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control mb-2\",\n              placeholder: \"Enter your password\",\n              value: password,\n              onChange: changePassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password-strength-indicator mb-1\",\n              style: {\n                position: \"relative\",\n                height: \"10px\",\n                backgroundColor: \"#e0e0e0\",\n                borderRadius: \"5px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: \"absolute\",\n                  height: \"100%\",\n                  width: getPasswordStrengthWidth(passwordStrength),\n                  backgroundColor: getPasswordStrengthColor(passwordStrength),\n                  borderRadius: \"5px\",\n                  transition: \"width 0.5s, background-color 0.5s\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 749,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 13\n            }, this), passwordStrength && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: getPasswordStrengthColor(passwordStrength)\n              },\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: passwordStrength\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 762,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 761,\n              columnNumber: 15\n            }, this), passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"red\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: passwordError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control mb-2\",\n              placeholder: \"Enter your confirm password\",\n              value: confirmPassword,\n              onChange: changeConfirmPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 774,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary w-100\",\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4\",\n          children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 693,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"9fhMoWs5PylBJ3/QhIKzHbK69/A=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","registerApi","toast","jsxDEV","_jsxDEV","Register","_s","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","passwordStrength","setPasswordStrength","passwordError","setPasswordError","changeFirstName","e","target","value","changeLastName","changeEmail","changePassword","pwd","evaluatePasswordStrength","changeConfirmPassword","lengthRequirement","uppercaseRequirement","lowercaseRequirement","numberRequirement","specialCharRequirement","length","test","handleSubmit","preventDefault","includes","error","data","then","res","success","message","catch","err","console","log","getPasswordStrengthColor","strength","getPasswordStrengthWidth","className","style","overflow","children","width","marginRight","src","alt","height","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","padding","onSubmit","type","placeholder","onChange","position","backgroundColor","borderRadius","transition","color","href","_c","$RefreshReg$"],"sources":["C:/Users/Sanjeela/Desktop/Security_CW2/Frontend/src/pages/user/Register.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { registerApi } from \"../../apis/Apis\";\r\n// import { toast } from \"react-toastify\";\r\n\r\n// const Register = () => {\r\n//   const [firstName, setFirstName] = useState(\"\");\r\n//   const [lastName, setLastName] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n//   const changeFirstName = (e) => {\r\n//     setFirstName(e.target.value);\r\n//   };\r\n\r\n//   const changeLastName = (e) => {\r\n//     setLastName(e.target.value);\r\n//   };\r\n\r\n//   const changeEmail = (e) => {\r\n//     setEmail(e.target.value);\r\n//   };\r\n\r\n//   const changePassword = (e) => {\r\n//     setPassword(e.target.value);\r\n//   };\r\n\r\n//   const changeconfirmPassword = (e) => {\r\n//     setConfirmPassword(e.target.value);\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const data = {\r\n//       firstName: firstName,\r\n//       lastName: lastName,\r\n//       email: email,\r\n//       password: password,\r\n//       confirmPassword: confirmPassword,\r\n//     };\r\n\r\n//     registerApi(data)\r\n//       .then((res) => {\r\n//         if (res.data.success === true) {\r\n//           toast.success(res.data.message);\r\n//         } else {\r\n//           toast.error(res.data.message);\r\n//         }\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err);\r\n//         toast.error(\"Internal Server Error!\");\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"d-flex justify-content-center align-items-center vh-100\">\r\n//       <div\r\n//         className=\"d-flex\"\r\n//         style={{\r\n//           boxShadow: \"0px 0px 10px 0px rgba(0,0,0,0.2)\",\r\n//           padding: \"20px\",\r\n//           borderRadius: \"10px\",\r\n//         }}\r\n//       >\r\n//         {/* Left side with image */}\r\n//         <div className=\"w-50\" style={{ marginRight: \"20px\" }}>\r\n//           <img\r\n//             src=\"/assets/images/Cover.jpg\"\r\n//             alt=\"Cover Page\"\r\n//             className=\"w-100 h-100\"\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Right side with form */}\r\n//         <div className=\"w-50\">\r\n//           <h1 className=\"m-4\">Create an Account</h1>\r\n//           <form className=\"w-75\">\r\n//             <label>Firstname</label>\r\n//             <input\r\n//               onChange={changeFirstName}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your firstname\"\r\n//             />\r\n\r\n//             <label>Lastname</label>\r\n//             <input\r\n//               onChange={changeLastName}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your lastname\"\r\n//             />\r\n\r\n//             <label>Email</label>\r\n//             <input\r\n//               onChange={changeEmail}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"email\"\r\n//               placeholder=\"Enter your email\"\r\n//             />\r\n\r\n//             <label>Password</label>\r\n//             <input\r\n//               onChange={changePassword}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"password\"\r\n//               placeholder=\"Enter your password\"\r\n//             />\r\n\r\n//             <label>Confirm Password</label>\r\n//             <input\r\n//               onChange={changeconfirmPassword}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"password\"\r\n//               placeholder=\"Enter your confirm password\"\r\n//             />\r\n\r\n//             <button\r\n//               onClick={handleSubmit}\r\n//               className=\"btn btn-secondary w-100\"\r\n//               type=\"submit\"\r\n//               style={{ backgroundColor: \"rgba(97, 124, 181, 1)\" }}\r\n//             >\r\n//               Signup\r\n//             </button>\r\n//             <p className=\"mt-4, \">\r\n//               Already have an account? <a href=\"/\">Login</a>\r\n//             </p>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { registerApi } from \"../../apis/Apis\";\r\n// import { toast } from \"react-toastify\";\r\n\r\n// const Register = () => {\r\n//   const [firstName, setFirstName] = useState(\"\");\r\n//   const [lastName, setLastName] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n//   const [passwordStrength, setPasswordStrength] = useState(\"\");\r\n\r\n//   const changeFirstName = (e) => {\r\n//     setFirstName(e.target.value);\r\n//   };\r\n\r\n//   const changeLastName = (e) => {\r\n//     setLastName(e.target.value);\r\n//   };\r\n\r\n//   const changeEmail = (e) => {\r\n//     setEmail(e.target.value);\r\n//   };\r\n\r\n//   const changePassword = (e) => {\r\n//     const pwd = e.target.value;\r\n//     setPassword(pwd);\r\n//     evaluatePasswordStrength(pwd);\r\n//   };\r\n\r\n//   const changeConfirmPassword = (e) => {\r\n//     setConfirmPassword(e.target.value);\r\n//   };\r\n\r\n//   const evaluatePasswordStrength = (password) => {\r\n//     const lengthRequirement = /.{8,12}/;\r\n//     const uppercaseRequirement = /[A-Z]/;\r\n//     const lowercaseRequirement = /[a-z]/;\r\n//     const numberRequirement = /[0-9]/;\r\n//     const specialCharRequirement = /[!@#$%^&*]/;\r\n\r\n//     if (\r\n//       lengthRequirement.test(password) &&\r\n//       uppercaseRequirement.test(password) &&\r\n//       lowercaseRequirement.test(password) &&\r\n//       numberRequirement.test(password) &&\r\n//       specialCharRequirement.test(password)\r\n//     ) {\r\n//       setPasswordStrength(\"Strong\");\r\n//     } else if (\r\n//       lengthRequirement.test(password) &&\r\n//       (uppercaseRequirement.test(password) ||\r\n//         lowercaseRequirement.test(password)) &&\r\n//       (numberRequirement.test(password) || specialCharRequirement.test(password))\r\n//     ) {\r\n//       setPasswordStrength(\"Medium\");\r\n//     } else {\r\n//       setPasswordStrength(\"Weak\");\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (!email.includes(\"@\")) {\r\n//       toast.error(\"Invalid email format.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (passwordStrength === \"Weak\") {\r\n//       toast.error(\"Password is too weak.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (password !== confirmPassword) {\r\n//       toast.error(\"Passwords do not match.\");\r\n//       return;\r\n//     }\r\n\r\n\r\n//     const data = {\r\n//       firstName: firstName,\r\n//       lastName: lastName,\r\n//       email: email,\r\n//       password: password,\r\n//       confirmPassword: confirmPassword,\r\n//     };\r\n\r\n//     registerApi(data)\r\n//       .then((res) => {\r\n//         if (res.data.success === true) {\r\n//           toast.success(res.data.message);\r\n//         } else {\r\n//           toast.error(res.data.message);\r\n//         }\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err);\r\n//         toast.error(\"Internal Server Error!\");\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"d-flex justify-content-center align-items-center vh-100\">\r\n//       <div\r\n//         className=\"d-flex\"\r\n//         style={{\r\n//           boxShadow: \"0px 0px 10px 0px rgba(0,0,0,0.2)\",\r\n//           padding: \"20px\",\r\n//           borderRadius: \"10px\",\r\n//         }}\r\n//       >\r\n//         {/* Left side with image */}\r\n//         <div className=\"w-50\" style={{ marginRight: \"20px\" }}>\r\n//           <img\r\n//             src=\"/assets/images/Cover.jpg\"\r\n//             alt=\"Cover Page\"\r\n//             className=\"w-100 h-100\"\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Right side with form */}\r\n//         <div className=\"w-50\">\r\n//           <h1 className=\"m-4\">Create an Account</h1>\r\n//           <form className=\"w-75\" onSubmit={handleSubmit}>\r\n//             <label>Firstname</label>\r\n//             <input\r\n//               onChange={changeFirstName}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your firstname\"\r\n//               value={firstName}\r\n//             />\r\n\r\n//             <label>Lastname</label>\r\n//             <input\r\n//               onChange={changeLastName}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your lastname\"\r\n//               value={lastName}\r\n//             />\r\n\r\n//             <label>Email</label>\r\n//             <input\r\n//               onChange={changeEmail}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"email\"\r\n//               placeholder=\"Enter your email\"\r\n//               value={email}\r\n//             />\r\n\r\n//             <label>Password</label>\r\n//             <input\r\n//               onChange={changePassword}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"password\"\r\n//               placeholder=\"Enter your password\"\r\n//               value={password}\r\n//             />\r\n//             <div className={`mb-2 ${passwordStrength}`}>\r\n//               Password Strength: <strong>{passwordStrength}</strong>\r\n//             </div>\r\n\r\n//             <label>Confirm Password</label>\r\n//             <input\r\n//               onChange={changeConfirmPassword}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"password\"\r\n//               placeholder=\"Enter your confirm password\"\r\n//               value={confirmPassword}\r\n//             />\r\n\r\n//             <button\r\n//               className=\"btn btn-secondary w-100\"\r\n//               type=\"submit\"\r\n//               style={{ backgroundColor: \"rgba(97, 124, 181, 1)\" }}\r\n//             >\r\n//               Signup\r\n//             </button>\r\n//             <p className=\"mt-4, \">\r\n//               Already have an account? <a href=\"/\">Login</a>\r\n//             </p>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { registerApi } from \"../../apis/Apis\";\r\n// import { toast } from \"react-toastify\";\r\n\r\n// const Register = () => {\r\n//   const [firstName, setFirstName] = useState(\"\");\r\n//   const [lastName, setLastName] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n//   const [passwordStrength, setPasswordStrength] = useState(\"\");\r\n//   const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n//   const changeFirstName = (e) => {\r\n//     setFirstName(e.target.value);\r\n//   };\r\n\r\n//   const changeLastName = (e) => {\r\n//     setLastName(e.target.value);\r\n//   };\r\n\r\n//   const changeEmail = (e) => {\r\n//     setEmail(e.target.value);\r\n//   };\r\n\r\n//   const changePassword = (e) => {\r\n//     const pwd = e.target.value;\r\n//     setPassword(pwd);\r\n//     evaluatePasswordStrength(pwd);\r\n//   };\r\n\r\n//   const changeConfirmPassword = (e) => {\r\n//     setConfirmPassword(e.target.value);\r\n//   };\r\n\r\n//   const evaluatePasswordStrength = (password) => {\r\n//     const lengthRequirement = /.{8,12}/;\r\n//     const uppercaseRequirement = /[A-Z]/;\r\n//     const lowercaseRequirement = /[a-z]/;\r\n//     const numberRequirement = /[0-9]/;\r\n//     const specialCharRequirement = /[!@#$%^&*]/;\r\n\r\n//     if (password.length < 8) {\r\n//       setPasswordError(\"Password must be at least 8 characters long.\");\r\n//       setPasswordStrength(\"Weak\");\r\n//       return;\r\n//     }\r\n\r\n//     if (\r\n//       lengthRequirement.test(password) &&\r\n//       uppercaseRequirement.test(password) &&\r\n//       lowercaseRequirement.test(password) &&\r\n//       numberRequirement.test(password) &&\r\n//       specialCharRequirement.test(password)\r\n//     ) {\r\n//       setPasswordStrength(\"Strong\");\r\n//       setPasswordError(\"\");\r\n//     } else if (\r\n//       lengthRequirement.test(password) &&\r\n//       (uppercaseRequirement.test(password) ||\r\n//         lowercaseRequirement.test(password)) &&\r\n//       (numberRequirement.test(password) || specialCharRequirement.test(password))\r\n//     ) {\r\n//       setPasswordStrength(\"Medium\");\r\n//       setPasswordError(\"\");\r\n//     } else {\r\n//       setPasswordStrength(\"Weak\");\r\n//       setPasswordError(\r\n//         \"Password must contain uppercase, lowercase, numbers, and special characters.\"\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (!email.includes(\"@\")) {\r\n//       toast.error(\"Invalid email format.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (passwordStrength === \"Weak\") {\r\n//       toast.error(\"Password is too weak.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (password !== confirmPassword) {\r\n//       toast.error(\"Passwords do not match.\");\r\n//       return;\r\n//     }\r\n\r\n//     const data = {\r\n//       firstName: firstName,\r\n//       lastName: lastName,\r\n//       email: email,\r\n//       password: password,\r\n//       confirmPassword: confirmPassword,\r\n//     };\r\n\r\n//     registerApi(data)\r\n//       .then((res) => {\r\n//         if (res.data.success === true) {\r\n//           toast.success(res.data.message);\r\n//         } else {\r\n//           toast.error(res.data.message);\r\n//         }\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err);\r\n//         toast.error(\"Internal Server Error!\");\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"d-flex justify-content-center align-items-center vh-100\">\r\n//       <div\r\n//         className=\"d-flex\"\r\n//         style={{\r\n//           boxShadow: \"0px 0px 10px 0px rgba(0,0,0,0.2)\",\r\n//           padding: \"20px\",\r\n//           borderRadius: \"10px\",\r\n//         }}\r\n//       >\r\n//         {/* Left side with image */}\r\n//         <div className=\"w-50\" style={{ marginRight: \"20px\" }}>\r\n//           <img\r\n//             src=\"/assets/images/Cover.jpg\"\r\n//             alt=\"Cover Page\"\r\n//             className=\"w-100 h-100\"\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Right side with form */}\r\n//         <div className=\"w-50\">\r\n//           <h1 className=\"m-4\">Create an Account</h1>\r\n//           <form className=\"w-75\" onSubmit={handleSubmit}>\r\n//             <label>Firstname</label>\r\n//             <input\r\n//               onChange={changeFirstName}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your firstname\"\r\n//               value={firstName}\r\n//             />\r\n\r\n//             <label>Lastname</label>\r\n//             <input\r\n//               onChange={changeLastName}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your lastname\"\r\n//               value={lastName}\r\n//             />\r\n\r\n//             <label>Email</label>\r\n//             <input\r\n//               onChange={changeEmail}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"email\"\r\n//               placeholder=\"Enter your email\"\r\n//               value={email}\r\n//             />\r\n\r\n//             <label>Password</label>\r\n//             <input\r\n//               onChange={changePassword}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"password\"\r\n//               placeholder=\"Enter your password\"\r\n//               value={password}\r\n//             />\r\n//             <div\r\n//               className=\"mb-2\"\r\n//               style={{\r\n//                 color:\r\n//                   passwordStrength === \"Strong\"\r\n//                     ? \"green\"\r\n//                     : passwordStrength === \"Medium\"\r\n//                     ? \"orange\"\r\n//                     : \"red\",\r\n//               }}\r\n//             >\r\n//               Password Strength: <strong>{passwordStrength}</strong>\r\n//             </div>\r\n//             {passwordError && (\r\n//               <div style={{ color: \"red\" }}>\r\n//                 <small>{passwordError}</small>\r\n//               </div>\r\n//             )}\r\n\r\n//             <label>Confirm Password</label>\r\n//             <input\r\n//               onChange={changeConfirmPassword}\r\n//               className=\"form-control mb-2\"\r\n//               type=\"password\"\r\n//               placeholder=\"Enter your confirm password\"\r\n//               value={confirmPassword}\r\n//             />\r\n\r\n//             <button\r\n//               className=\"btn btn-secondary w-100\"\r\n//               type=\"submit\"\r\n//               style={{ backgroundColor: \"rgba(97, 124, 181, 1)\" }}\r\n//             >\r\n//               Signup\r\n//             </button>\r\n//             <p className=\"mt-4, \">\r\n//               Already have an account? <a href=\"/\">Login</a>\r\n//             </p>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\nimport React, { useState } from \"react\";\r\nimport { registerApi } from \"../../apis/Apis\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Register = () => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [passwordStrength, setPasswordStrength] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n  const changeFirstName = (e) => {\r\n    setFirstName(e.target.value);\r\n  };\r\n\r\n  const changeLastName = (e) => {\r\n    setLastName(e.target.value);\r\n  };\r\n\r\n  const changeEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const changePassword = (e) => {\r\n    const pwd = e.target.value;\r\n    setPassword(pwd);\r\n    evaluatePasswordStrength(pwd);\r\n  };\r\n\r\n  const changeConfirmPassword = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n  };\r\n\r\n  const evaluatePasswordStrength = (password) => {\r\n    const lengthRequirement = /.{8,12}/;\r\n    const uppercaseRequirement = /[A-Z]/;\r\n    const lowercaseRequirement = /[a-z]/;\r\n    const numberRequirement = /[0-9]/;\r\n    const specialCharRequirement = /[!@#$%^&*]/;\r\n\r\n    if (password.length < 8) {\r\n      setPasswordError(\"Password must be at least 8 characters long.\");\r\n      setPasswordStrength(\"Weak\");\r\n      return;\r\n    }\r\n\r\n    if (\r\n      lengthRequirement.test(password) &&\r\n      uppercaseRequirement.test(password) &&\r\n      lowercaseRequirement.test(password) &&\r\n      numberRequirement.test(password) &&\r\n      specialCharRequirement.test(password)\r\n    ) {\r\n      setPasswordStrength(\"Strong\");\r\n      setPasswordError(\"\");\r\n    } else if (\r\n      lengthRequirement.test(password) &&\r\n      (uppercaseRequirement.test(password) ||\r\n        lowercaseRequirement.test(password)) &&\r\n      (numberRequirement.test(password) || specialCharRequirement.test(password))\r\n    ) {\r\n      setPasswordStrength(\"Medium\");\r\n      setPasswordError(\"\");\r\n    } else {\r\n      setPasswordStrength(\"Weak\");\r\n      setPasswordError(\r\n        \"Password must contain uppercase, lowercase, numbers, and special characters.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!email.includes(\"@\")) {\r\n      toast.error(\"Invalid email format.\");\r\n      return;\r\n    }\r\n\r\n    if (passwordStrength === \"Weak\") {\r\n      toast.error(\"Password is too weak.\");\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      toast.error(\"Passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      email: email,\r\n      password: password,\r\n      confirmPassword: confirmPassword,\r\n    };\r\n\r\n    registerApi(data)\r\n      .then((res) => {\r\n        if (res.data.success === true) {\r\n          toast.success(res.data.message);\r\n        } else {\r\n          toast.error(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast.error(\"Internal Server Error!\");\r\n      });\r\n  };\r\n\r\n  // Determine the background color of the password strength indicator based on password strength\r\n  const getPasswordStrengthColor = (strength) => {\r\n    switch (strength) {\r\n      case \"Strong\":\r\n        return \"green\";\r\n      case \"Medium\":\r\n        return \"orange\";\r\n      case \"Weak\":\r\n      default:\r\n        return \"red\";\r\n    }\r\n  };\r\n\r\n  // Determine the width of the filled portion of the password strength bar based on password strength\r\n  const getPasswordStrengthWidth = (strength) => {\r\n    switch (strength) {\r\n      case \"Strong\":\r\n        return \"100%\";\r\n      case \"Medium\":\r\n        return \"66%\";\r\n      case \"Weak\":\r\n      default:\r\n        return \"33%\";\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center align-items-center vh-80\" style={{ overflow: \"hidden\" }}>\r\n      {/* Image container with 50% width and full viewport height */}\r\n      <div className=\"h-100\" style={{ width: \"50%\", marginRight: \"10px\" }}>\r\n        <img\r\n          src=\"/assets/images/Cover.jpg\"\r\n          alt=\"Cover Page\"\r\n          style={{ width: \"100%\", height: \"100%\", objectFit: \"cover\" }}\r\n        />\r\n      </div>\r\n\r\n      {/* Form container */}\r\n      <div style={{ width: \"50%\" }}>\r\n        <div style={{ padding: \"20px\" }}>\r\n          <h1>Create an Account</h1>\r\n          <form className=\"w-75\" onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Firstname</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-2\"\r\n                placeholder=\"Enter your firstname\"\r\n                value={firstName}\r\n                onChange={changeFirstName}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Lastname</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-2\"\r\n                placeholder=\"Enter your lastname\"\r\n                value={lastName}\r\n                onChange={changeLastName}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Email</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control mb-2\"\r\n                placeholder=\"Enter your email\"\r\n                value={email}\r\n                onChange={changeEmail}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control mb-2\"\r\n                placeholder=\"Enter your password\"\r\n                value={password}\r\n                onChange={changePassword}\r\n              />\r\n               {/* Password Strength Indicator Line */}\r\n            <div className=\"password-strength-indicator mb-1\" style={{ position: \"relative\", height: \"10px\", backgroundColor: \"#e0e0e0\", borderRadius: \"5px\" }}>\r\n              <div\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"100%\",\r\n                  width: getPasswordStrengthWidth(passwordStrength),\r\n                  backgroundColor: getPasswordStrengthColor(passwordStrength),\r\n                  borderRadius: \"5px\",\r\n                  transition: \"width 0.5s, background-color 0.5s\",\r\n                }}\r\n              />\r\n            </div>\r\n            {passwordStrength && (\r\n              <div style={{ color: getPasswordStrengthColor(passwordStrength) }}>\r\n                <small>{passwordStrength}</small>\r\n              </div>\r\n            )}\r\n            {passwordError && (\r\n              <div style={{ color: \"red\" }}>\r\n                <small>{passwordError}</small>\r\n              </div>\r\n            )}\r\n\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Confirm Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control mb-2\"\r\n                placeholder=\"Enter your confirm password\"\r\n                value={confirmPassword}\r\n                onChange={changeConfirmPassword}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary w-100\">Signup</button>\r\n          </form>\r\n          <p className=\"mt-4\">\r\n            Already have an account? <a href=\"/\">Login</a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Register;\r\n\r\n\r\n\r\n\r\n\r\n "],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;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"},"metadata":{},"sourceType":"module","externalDependencies":[]}