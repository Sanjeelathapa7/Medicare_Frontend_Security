{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import { toast } from \"react-toastify\";\n// import { updatePasswordApi } from \"../../apis/Apis\";\n\n// const ResetPassword = () => {\n//   const [newPassword, setNewPassword] = useState(\"\");\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\n//   const [newPasswordVisible, setNewPasswordVisible] = useState(false);\n//   const [confirmPasswordVisible, setConfirmPasswordVisible] = useState(false);\n//   const [ setError] = useState(\"\");\n//     const [ setSuccessMessage] = useState(\"\");\n//   const navigate = useNavigate();\n//   const location = useLocation();\n\n//   const userEmail = location.state && location.state.User_email;\n\n//   const handleChangePassword = (e) => {\n//     setNewPassword(e.target.value);\n//   };\n\n//   const handleChangeConfirmPassword = (e) => {\n//     setConfirmPassword(e.target.value);\n//   };\n\n//   const handleChangePasswordSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       // Check if passwords match\n//       if (newPassword !== confirmPassword) {\n//         toast.error(\"Passwords do not match\");\n//         return;\n//       }\n\n//       const response = await updatePasswordApi({\n//         email: userEmail,\n//         password: newPassword,\n//       });\n\n//       if (response?.data?.success) {\n//         toast.success(response?.data?.message);\n//         navigate(\"/auth?mode=login\");\n//       } else {\n//         toast.error(response?.data?.message);\n//       }\n//     } catch (error) {\n//       console.error(error);\n//       toast.error(\"Server Error\");\n//     }\n//   };\n\n//   const toggleNewPasswordVisibility = () => {\n//     setNewPasswordVisible(!newPasswordVisible);\n//   };\n\n//   const toggleConfirmPasswordVisibility = () => {\n//     setConfirmPasswordVisible(!confirmPasswordVisible);\n//   };\n\n//   return (\n//     <div className=\"row vh-100 d-flex align-items-center justify-content-center\">\n//       <div className=\"col-md-5 bg-white p-5\">\n//         <p className=\"text-center my-4 font-primary tw-text-blue tw-text-4xl\">\n//           <u>Create New Password</u>\n//         </p>\n//         <form\n//           onSubmit={handleChangePasswordSubmit}\n//           className=\"px-3\"\n//           style={{\n//             display: \"flex\",\n//             flexDirection: \"column\",\n//             justifyContent: \"center\",\n//             alignItems: \"center\",\n//           }}\n//         >\n//           <div className=\"tw-flex tw-items-center tw-flex-col\">\n//             <div>\n//               <b className=\"tw-text-blue tw-font-secondary tw-mt-5\">\n//                 Enter password\n//               </b>\n//               <div className=\"tw-flex tw-items-center tw-mb-5\">\n//                 <input\n//                   type={newPasswordVisible ? \"text\" : \"password\"}\n//                   className=\"tw-border-none tw-p-2 focus:tw-outline-none\"\n//                   value={newPassword}\n//                   onChange={handleChangePassword}\n//                   placeholder=\"Password\"\n//                   style={{\n//                     backgroundColor: \"#F3F4F4\",\n//                     color: \"#A8AAAA\",\n//                     border: \"none\",\n//                     marginRight: \"2px\",\n//                     padding: \"3px 10px\",\n//                     width: \"280px\",\n//                   }}\n//                 />\n//                 <div\n//                   className=\"tw-bg-gray-100\"\n//                   style={{\n//                     display: \"flex\",\n//                     justifyContent: \"center\",\n//                     alignItems: \"center\",\n//                     backgroundColor: \"#F3F4F4\",\n//                     padding: \"5px\",\n//                     cursor: \"pointer\",\n//                   }}\n//                   onClick={toggleNewPasswordVisibility}\n//                 >\n//                   <img\n//                     src={\n//                       newPasswordVisible\n//                         ? \"/assets/svg/eye.svg\"\n//                         : \"/assets/svg/eye-crossed.svg\"\n//                     }\n//                     style={{\n//                       height: \"20px\",\n//                     }}\n//                   />\n//                 </div>\n//               </div>\n//             </div>\n//             <div className=\"tw-mb-4\">\n//               <b className=\"tw-text-blue tw-font-secondary tw-mt-5\">\n//                 Confirm new password\n//               </b>\n//               <div className=\"tw-flex tw-items-center\">\n//                 <input\n//                   type={confirmPasswordVisible ? \"text\" : \"password\"}\n//                   className=\"tw-border-none tw-p-2 focus:tw-outline-none\"\n//                   value={confirmPassword}\n//                   onChange={handleChangeConfirmPassword}\n//                   placeholder=\"Confirm password\"\n//                   style={{\n//                     backgroundColor: \"#F3F4F4\",\n//                     color: \"#A8AAAA\",\n//                     border: \"none\",\n//                     marginRight: \"2px\",\n//                     padding: \"3px 10px\",\n//                     width: \"280px\",\n//                   }}\n//                 />\n//                 <div\n//                   className=\"tw-bg-gray-100\"\n//                   style={{\n//                     display: \"flex\",\n//                     justifyContent: \"center\",\n//                     alignItems: \"center\",\n//                     backgroundColor: \"#F3F4F4\",\n//                     padding: \"5px\",\n//                     cursor: \"pointer\",\n//                   }}\n//                   onClick={toggleConfirmPasswordVisibility}\n//                 >\n//                   <img\n//                     src={\n//                       confirmPasswordVisible\n//                         ? \"/assets/svg/eye.svg\"\n//                         : \"/assets/svg/eye-crossed.svg\"\n//                     }\n//                     style={{\n//                       height: \"20px\",\n//                     }}\n//                   />\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//           <button\n//             className=\"btn btn-blue tw-text-sm tw-mt-3 font-primary\"\n//             type=\"submit\"\n//           >\n//             Submit\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ResetPassword;","map":{"version":3,"names":[],"sources":["C:/Users/Sanjeela/Desktop/Security_CW2/Frontend/src/pages/user/Resetpassword.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useLocation, useNavigate } from \"react-router-dom\";\r\n// import { toast } from \"react-toastify\";\r\n// import { updatePasswordApi } from \"../../apis/Apis\";\r\n\r\n// const ResetPassword = () => {\r\n//   const [newPassword, setNewPassword] = useState(\"\");\r\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n//   const [newPasswordVisible, setNewPasswordVisible] = useState(false);\r\n//   const [confirmPasswordVisible, setConfirmPasswordVisible] = useState(false);\r\n//   const [ setError] = useState(\"\");\r\n//     const [ setSuccessMessage] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n//   const location = useLocation();\r\n\r\n//   const userEmail = location.state && location.state.User_email;\r\n\r\n//   const handleChangePassword = (e) => {\r\n//     setNewPassword(e.target.value);\r\n//   };\r\n  \r\n\r\n//   const handleChangeConfirmPassword = (e) => {\r\n//     setConfirmPassword(e.target.value);\r\n//   };\r\n\r\n//   const handleChangePasswordSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//       // Check if passwords match\r\n//       if (newPassword !== confirmPassword) {\r\n//         toast.error(\"Passwords do not match\");\r\n//         return;\r\n//       }\r\n\r\n//       const response = await updatePasswordApi({\r\n//         email: userEmail,\r\n//         password: newPassword,\r\n//       });\r\n\r\n//       if (response?.data?.success) {\r\n//         toast.success(response?.data?.message);\r\n//         navigate(\"/auth?mode=login\");\r\n//       } else {\r\n//         toast.error(response?.data?.message);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       toast.error(\"Server Error\");\r\n//     }\r\n//   };\r\n\r\n//   const toggleNewPasswordVisibility = () => {\r\n//     setNewPasswordVisible(!newPasswordVisible);\r\n//   };\r\n\r\n//   const toggleConfirmPasswordVisibility = () => {\r\n//     setConfirmPasswordVisible(!confirmPasswordVisible);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"row vh-100 d-flex align-items-center justify-content-center\">\r\n//       <div className=\"col-md-5 bg-white p-5\">\r\n//         <p className=\"text-center my-4 font-primary tw-text-blue tw-text-4xl\">\r\n//           <u>Create New Password</u>\r\n//         </p>\r\n//         <form\r\n//           onSubmit={handleChangePasswordSubmit}\r\n//           className=\"px-3\"\r\n//           style={{\r\n//             display: \"flex\",\r\n//             flexDirection: \"column\",\r\n//             justifyContent: \"center\",\r\n//             alignItems: \"center\",\r\n//           }}\r\n//         >\r\n//           <div className=\"tw-flex tw-items-center tw-flex-col\">\r\n//             <div>\r\n//               <b className=\"tw-text-blue tw-font-secondary tw-mt-5\">\r\n//                 Enter password\r\n//               </b>\r\n//               <div className=\"tw-flex tw-items-center tw-mb-5\">\r\n//                 <input\r\n//                   type={newPasswordVisible ? \"text\" : \"password\"}\r\n//                   className=\"tw-border-none tw-p-2 focus:tw-outline-none\"\r\n//                   value={newPassword}\r\n//                   onChange={handleChangePassword}\r\n//                   placeholder=\"Password\"\r\n//                   style={{\r\n//                     backgroundColor: \"#F3F4F4\",\r\n//                     color: \"#A8AAAA\",\r\n//                     border: \"none\",\r\n//                     marginRight: \"2px\",\r\n//                     padding: \"3px 10px\",\r\n//                     width: \"280px\",\r\n//                   }}\r\n//                 />\r\n//                 <div\r\n//                   className=\"tw-bg-gray-100\"\r\n//                   style={{\r\n//                     display: \"flex\",\r\n//                     justifyContent: \"center\",\r\n//                     alignItems: \"center\",\r\n//                     backgroundColor: \"#F3F4F4\",\r\n//                     padding: \"5px\",\r\n//                     cursor: \"pointer\",\r\n//                   }}\r\n//                   onClick={toggleNewPasswordVisibility}\r\n//                 >\r\n//                   <img\r\n//                     src={\r\n//                       newPasswordVisible\r\n//                         ? \"/assets/svg/eye.svg\"\r\n//                         : \"/assets/svg/eye-crossed.svg\"\r\n//                     }\r\n//                     style={{\r\n//                       height: \"20px\",\r\n//                     }}\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"tw-mb-4\">\r\n//               <b className=\"tw-text-blue tw-font-secondary tw-mt-5\">\r\n//                 Confirm new password\r\n//               </b>\r\n//               <div className=\"tw-flex tw-items-center\">\r\n//                 <input\r\n//                   type={confirmPasswordVisible ? \"text\" : \"password\"}\r\n//                   className=\"tw-border-none tw-p-2 focus:tw-outline-none\"\r\n//                   value={confirmPassword}\r\n//                   onChange={handleChangeConfirmPassword}\r\n//                   placeholder=\"Confirm password\"\r\n//                   style={{\r\n//                     backgroundColor: \"#F3F4F4\",\r\n//                     color: \"#A8AAAA\",\r\n//                     border: \"none\",\r\n//                     marginRight: \"2px\",\r\n//                     padding: \"3px 10px\",\r\n//                     width: \"280px\",\r\n//                   }}\r\n//                 />\r\n//                 <div\r\n//                   className=\"tw-bg-gray-100\"\r\n//                   style={{\r\n//                     display: \"flex\",\r\n//                     justifyContent: \"center\",\r\n//                     alignItems: \"center\",\r\n//                     backgroundColor: \"#F3F4F4\",\r\n//                     padding: \"5px\",\r\n//                     cursor: \"pointer\",\r\n//                   }}\r\n//                   onClick={toggleConfirmPasswordVisibility}\r\n//                 >\r\n//                   <img\r\n//                     src={\r\n//                       confirmPasswordVisible\r\n//                         ? \"/assets/svg/eye.svg\"\r\n//                         : \"/assets/svg/eye-crossed.svg\"\r\n//                     }\r\n//                     style={{\r\n//                       height: \"20px\",\r\n//                     }}\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           <button\r\n//             className=\"btn btn-blue tw-text-sm tw-mt-3 font-primary\"\r\n//             type=\"submit\"\r\n//           >\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ResetPassword;\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}