{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sanjeela\\\\Desktop\\\\Security_CW2\\\\Frontend\\\\src\\\\pages\\\\user\\\\Resetpassword.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import { toast } from \"react-toastify\";\n// import { updatePasswordApi } from \"../../apis/Apis\";\n\n// const ResetPassword = () => {\n//   const [newPassword, setNewPassword] = useState(\"\");\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\n//   const [newPasswordVisible, setNewPasswordVisible] = useState(false);\n//   const [confirmPasswordVisible, setConfirmPasswordVisible] = useState(false);\n//   const [ setError] = useState(\"\");\n//     const [ setSuccessMessage] = useState(\"\");\n//   const navigate = useNavigate();\n//   const location = useLocation();\n\n//   const userEmail = location.state && location.state.User_email;\n\n//   const handleChangePassword = (e) => {\n//     setNewPassword(e.target.value);\n//   };\n\n//   const handleChangeConfirmPassword = (e) => {\n//     setConfirmPassword(e.target.value);\n//   };\n\n//   const handleChangePasswordSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       // Check if passwords match\n//       if (newPassword !== confirmPassword) {\n//         toast.error(\"Passwords do not match\");\n//         return;\n//       }\n\n//       const response = await updatePasswordApi({\n//         email: userEmail,\n//         password: newPassword,\n//       });\n\n//       if (response?.data?.success) {\n//         toast.success(response?.data?.message);\n//         navigate(\"/auth?mode=login\");\n//       } else {\n//         toast.error(response?.data?.message);\n//       }\n//     } catch (error) {\n//       console.error(error);\n//       toast.error(\"Server Error\");\n//     }\n//   };\n\n//   const toggleNewPasswordVisibility = () => {\n//     setNewPasswordVisible(!newPasswordVisible);\n//   };\n\n//   const toggleConfirmPasswordVisibility = () => {\n//     setConfirmPasswordVisible(!confirmPasswordVisible);\n//   };\n\n//   return (\n//     <div className=\"row vh-100 d-flex align-items-center justify-content-center\">\n//       <div className=\"col-md-5 bg-white p-5\">\n//         <p className=\"text-center my-4 font-primary tw-text-blue tw-text-4xl\">\n//           <u>Create New Password</u>\n//         </p>\n//         <form\n//           onSubmit={handleChangePasswordSubmit}\n//           className=\"px-3\"\n//           style={{\n//             display: \"flex\",\n//             flexDirection: \"column\",\n//             justifyContent: \"center\",\n//             alignItems: \"center\",\n//           }}\n//         >\n//           <div className=\"tw-flex tw-items-center tw-flex-col\">\n//             <div>\n//               <b className=\"tw-text-blue tw-font-secondary tw-mt-5\">\n//                 Enter password\n//               </b>\n//               <div className=\"tw-flex tw-items-center tw-mb-5\">\n//                 <input\n//                   type={newPasswordVisible ? \"text\" : \"password\"}\n//                   className=\"tw-border-none tw-p-2 focus:tw-outline-none\"\n//                   value={newPassword}\n//                   onChange={handleChangePassword}\n//                   placeholder=\"Password\"\n//                   style={{\n//                     backgroundColor: \"#F3F4F4\",\n//                     color: \"#A8AAAA\",\n//                     border: \"none\",\n//                     marginRight: \"2px\",\n//                     padding: \"3px 10px\",\n//                     width: \"280px\",\n//                   }}\n//                 />\n//                 <div\n//                   className=\"tw-bg-gray-100\"\n//                   style={{\n//                     display: \"flex\",\n//                     justifyContent: \"center\",\n//                     alignItems: \"center\",\n//                     backgroundColor: \"#F3F4F4\",\n//                     padding: \"5px\",\n//                     cursor: \"pointer\",\n//                   }}\n//                   onClick={toggleNewPasswordVisibility}\n//                 >\n//                   <img\n//                     src={\n//                       newPasswordVisible\n//                         ? \"/assets/svg/eye.svg\"\n//                         : \"/assets/svg/eye-crossed.svg\"\n//                     }\n//                     style={{\n//                       height: \"20px\",\n//                     }}\n//                   />\n//                 </div>\n//               </div>\n//             </div>\n//             <div className=\"tw-mb-4\">\n//               <b className=\"tw-text-blue tw-font-secondary tw-mt-5\">\n//                 Confirm new password\n//               </b>\n//               <div className=\"tw-flex tw-items-center\">\n//                 <input\n//                   type={confirmPasswordVisible ? \"text\" : \"password\"}\n//                   className=\"tw-border-none tw-p-2 focus:tw-outline-none\"\n//                   value={confirmPassword}\n//                   onChange={handleChangeConfirmPassword}\n//                   placeholder=\"Confirm password\"\n//                   style={{\n//                     backgroundColor: \"#F3F4F4\",\n//                     color: \"#A8AAAA\",\n//                     border: \"none\",\n//                     marginRight: \"2px\",\n//                     padding: \"3px 10px\",\n//                     width: \"280px\",\n//                   }}\n//                 />\n//                 <div\n//                   className=\"tw-bg-gray-100\"\n//                   style={{\n//                     display: \"flex\",\n//                     justifyContent: \"center\",\n//                     alignItems: \"center\",\n//                     backgroundColor: \"#F3F4F4\",\n//                     padding: \"5px\",\n//                     cursor: \"pointer\",\n//                   }}\n//                   onClick={toggleConfirmPasswordVisibility}\n//                 >\n//                   <img\n//                     src={\n//                       confirmPasswordVisible\n//                         ? \"/assets/svg/eye.svg\"\n//                         : \"/assets/svg/eye-crossed.svg\"\n//                     }\n//                     style={{\n//                       height: \"20px\",\n//                     }}\n//                   />\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//           <button\n//             className=\"btn btn-blue tw-text-sm tw-mt-3 font-primary\"\n//             type=\"submit\"\n//           >\n//             Submit\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ResetPassword;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { updatePasswordApi } from '../../apis/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChangePassword() {\n  _s();\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [setError] = useState(\"\");\n  const [setSuccessMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handlePasswordChange = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccessMessage(\"\");\n    const data = {\n      currentPassword,\n      newPassword,\n      confirmPassword\n    };\n    try {\n      const response = await updatePasswordApi(data);\n      if (response.data.success === false) {\n        toast.error(response.data.message);\n      } else {\n        toast.success('Password changed successfully!');\n        setCurrentPassword('');\n        setNewPassword('');\n        setConfirmPassword('');\n        navigate('/');\n      }\n    } catch (error) {\n      setError(error.response.data.error);\n    }\n  };\n\n  // const handleReset = () => {\n  //     setCurrentPassword(\"\");\n  //     setNewPassword(\"\");\n  //     setConfirmPassword(\"\");\n  //     setError(\"\");\n  //     setSuccessMessage(\"\");\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"min-h-screen flex flex-col md:flex-row bg-[#F6F7D3]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-[#F6F7D3] hidden lg:block w-full md:w-1/2 xl:w-2/3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-[#F6F7D3] w-full md:max-w-md lg:max-w-full md:mx-auto md:w-1/2 px-6 lg:px-16 xl:px-12 flex items-center justify-center my-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl md:text-4xl font-bold leading-tight mt-4 mb-3 text-[#305973]\",\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl md:text-3xl font-medium leading-tight\",\n          children: \"CHANGE YOUR PASSWORD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"mt-4 bg-[#F6F7D3]\",\n          onSubmit: handlePasswordChange,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-[#305973] text-3xl\",\n              children: \"Current Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Enter your current password\",\n              className: \"w-full p-3 mt-2 mb-4 border rounded\",\n              autoFocus: true,\n              required: true,\n              value: currentPassword,\n              onChange: e => setCurrentPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-[#305973] text-3xl mt-3\",\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Enter your new password\",\n              className: \"w-full p-3 mt-2 mb-4 border rounded\",\n              required: true,\n              value: newPassword,\n              onChange: e => setNewPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-[#305973] text-3xl mt-3\",\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Confirm your password\",\n              className: \"w-full p-3 mt-2 mb-4 border rounded\",\n              minLength: \"6\",\n              required: true,\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"w-full bg-[#305973] text-white p-3 rounded mt-4\",\n            children: \"CHANGE PASSWORD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 9\n  }, this);\n}\n_s(ChangePassword, \"CvnpiTpT/OENjL/7Qk55pxY1Ofg=\", false, function () {\n  return [useNavigate];\n});\n_c = ChangePassword;\nvar _c;\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"names":["React","useState","useNavigate","toast","updatePasswordApi","jsxDEV","_jsxDEV","ChangePassword","_s","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","setError","setSuccessMessage","navigate","handlePasswordChange","e","preventDefault","data","response","success","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","autoFocus","required","value","onChange","target","minLength","_c","$RefreshReg$"],"sources":["C:/Users/Sanjeela/Desktop/Security_CW2/Frontend/src/pages/user/Resetpassword.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useLocation, useNavigate } from \"react-router-dom\";\r\n// import { toast } from \"react-toastify\";\r\n// import { updatePasswordApi } from \"../../apis/Apis\";\r\n\r\n// const ResetPassword = () => {\r\n//   const [newPassword, setNewPassword] = useState(\"\");\r\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n//   const [newPasswordVisible, setNewPasswordVisible] = useState(false);\r\n//   const [confirmPasswordVisible, setConfirmPasswordVisible] = useState(false);\r\n//   const [ setError] = useState(\"\");\r\n//     const [ setSuccessMessage] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n//   const location = useLocation();\r\n\r\n//   const userEmail = location.state && location.state.User_email;\r\n\r\n//   const handleChangePassword = (e) => {\r\n//     setNewPassword(e.target.value);\r\n//   };\r\n  \r\n\r\n//   const handleChangeConfirmPassword = (e) => {\r\n//     setConfirmPassword(e.target.value);\r\n//   };\r\n\r\n//   const handleChangePasswordSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//       // Check if passwords match\r\n//       if (newPassword !== confirmPassword) {\r\n//         toast.error(\"Passwords do not match\");\r\n//         return;\r\n//       }\r\n\r\n//       const response = await updatePasswordApi({\r\n//         email: userEmail,\r\n//         password: newPassword,\r\n//       });\r\n\r\n//       if (response?.data?.success) {\r\n//         toast.success(response?.data?.message);\r\n//         navigate(\"/auth?mode=login\");\r\n//       } else {\r\n//         toast.error(response?.data?.message);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       toast.error(\"Server Error\");\r\n//     }\r\n//   };\r\n\r\n//   const toggleNewPasswordVisibility = () => {\r\n//     setNewPasswordVisible(!newPasswordVisible);\r\n//   };\r\n\r\n//   const toggleConfirmPasswordVisibility = () => {\r\n//     setConfirmPasswordVisible(!confirmPasswordVisible);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"row vh-100 d-flex align-items-center justify-content-center\">\r\n//       <div className=\"col-md-5 bg-white p-5\">\r\n//         <p className=\"text-center my-4 font-primary tw-text-blue tw-text-4xl\">\r\n//           <u>Create New Password</u>\r\n//         </p>\r\n//         <form\r\n//           onSubmit={handleChangePasswordSubmit}\r\n//           className=\"px-3\"\r\n//           style={{\r\n//             display: \"flex\",\r\n//             flexDirection: \"column\",\r\n//             justifyContent: \"center\",\r\n//             alignItems: \"center\",\r\n//           }}\r\n//         >\r\n//           <div className=\"tw-flex tw-items-center tw-flex-col\">\r\n//             <div>\r\n//               <b className=\"tw-text-blue tw-font-secondary tw-mt-5\">\r\n//                 Enter password\r\n//               </b>\r\n//               <div className=\"tw-flex tw-items-center tw-mb-5\">\r\n//                 <input\r\n//                   type={newPasswordVisible ? \"text\" : \"password\"}\r\n//                   className=\"tw-border-none tw-p-2 focus:tw-outline-none\"\r\n//                   value={newPassword}\r\n//                   onChange={handleChangePassword}\r\n//                   placeholder=\"Password\"\r\n//                   style={{\r\n//                     backgroundColor: \"#F3F4F4\",\r\n//                     color: \"#A8AAAA\",\r\n//                     border: \"none\",\r\n//                     marginRight: \"2px\",\r\n//                     padding: \"3px 10px\",\r\n//                     width: \"280px\",\r\n//                   }}\r\n//                 />\r\n//                 <div\r\n//                   className=\"tw-bg-gray-100\"\r\n//                   style={{\r\n//                     display: \"flex\",\r\n//                     justifyContent: \"center\",\r\n//                     alignItems: \"center\",\r\n//                     backgroundColor: \"#F3F4F4\",\r\n//                     padding: \"5px\",\r\n//                     cursor: \"pointer\",\r\n//                   }}\r\n//                   onClick={toggleNewPasswordVisibility}\r\n//                 >\r\n//                   <img\r\n//                     src={\r\n//                       newPasswordVisible\r\n//                         ? \"/assets/svg/eye.svg\"\r\n//                         : \"/assets/svg/eye-crossed.svg\"\r\n//                     }\r\n//                     style={{\r\n//                       height: \"20px\",\r\n//                     }}\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"tw-mb-4\">\r\n//               <b className=\"tw-text-blue tw-font-secondary tw-mt-5\">\r\n//                 Confirm new password\r\n//               </b>\r\n//               <div className=\"tw-flex tw-items-center\">\r\n//                 <input\r\n//                   type={confirmPasswordVisible ? \"text\" : \"password\"}\r\n//                   className=\"tw-border-none tw-p-2 focus:tw-outline-none\"\r\n//                   value={confirmPassword}\r\n//                   onChange={handleChangeConfirmPassword}\r\n//                   placeholder=\"Confirm password\"\r\n//                   style={{\r\n//                     backgroundColor: \"#F3F4F4\",\r\n//                     color: \"#A8AAAA\",\r\n//                     border: \"none\",\r\n//                     marginRight: \"2px\",\r\n//                     padding: \"3px 10px\",\r\n//                     width: \"280px\",\r\n//                   }}\r\n//                 />\r\n//                 <div\r\n//                   className=\"tw-bg-gray-100\"\r\n//                   style={{\r\n//                     display: \"flex\",\r\n//                     justifyContent: \"center\",\r\n//                     alignItems: \"center\",\r\n//                     backgroundColor: \"#F3F4F4\",\r\n//                     padding: \"5px\",\r\n//                     cursor: \"pointer\",\r\n//                   }}\r\n//                   onClick={toggleConfirmPasswordVisibility}\r\n//                 >\r\n//                   <img\r\n//                     src={\r\n//                       confirmPasswordVisible\r\n//                         ? \"/assets/svg/eye.svg\"\r\n//                         : \"/assets/svg/eye-crossed.svg\"\r\n//                     }\r\n//                     style={{\r\n//                       height: \"20px\",\r\n//                     }}\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           <button\r\n//             className=\"btn btn-blue tw-text-sm tw-mt-3 font-primary\"\r\n//             type=\"submit\"\r\n//           >\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ResetPassword;\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { updatePasswordApi } from '../../apis/Api';\r\n\r\nexport default function ChangePassword() {\r\n    const [currentPassword, setCurrentPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [ setError] = useState(\"\");\r\n    const [ setSuccessMessage] = useState(\"\");\r\n\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handlePasswordChange = async (e) => {\r\n        e.preventDefault();\r\n\r\n        setError(\"\");\r\n        setSuccessMessage(\"\");\r\n\r\n        const data = {\r\n            currentPassword,\r\n            newPassword,\r\n            confirmPassword\r\n        };\r\n\r\n        try {\r\n            const response = await updatePasswordApi(data);\r\n\r\n            if (response.data.success === false) {\r\n                toast.error(response.data.message);\r\n            } else {\r\n                toast.success('Password changed successfully!');\r\n                setCurrentPassword('');\r\n                setNewPassword('');\r\n                setConfirmPassword('');\r\n                navigate('/');\r\n            }\r\n        } catch (error) {\r\n            setError(error.response.data.error);\r\n        }\r\n    };\r\n\r\n    // const handleReset = () => {\r\n    //     setCurrentPassword(\"\");\r\n    //     setNewPassword(\"\");\r\n    //     setConfirmPassword(\"\");\r\n    //     setError(\"\");\r\n    //     setSuccessMessage(\"\");\r\n    // };\r\n\r\n\r\n    return (\r\n        <section className=\"min-h-screen flex flex-col md:flex-row bg-[#F6F7D3]\">\r\n            <div className=\"bg-[#F6F7D3] hidden lg:block w-full md:w-1/2 xl:w-2/3\">\r\n                {/* <img src={Bg} alt=\"background\" className=\"w-full h-full object-cover\" /> */}\r\n            </div>\r\n            <div className=\"bg-[#F6F7D3] w-full md:max-w-md lg:max-w-full md:mx-auto md:w-1/2 px-6 lg:px-16 xl:px-12 flex items-center justify-center my-4\">\r\n                <div className=\"w-full h-100\">\r\n                    {/* <img src={Logo} alt=\"Logo\" className=\"relative -left-4\" /> */}\r\n                    <h1 className=\"text-4xl md:text-4xl font-bold leading-tight mt-4 mb-3 text-[#305973]\">\r\n                        Change Password\r\n                    </h1>\r\n                    <h2 className=\"text-3xl md:text-3xl font-medium leading-tight\">\r\n                        CHANGE YOUR PASSWORD\r\n                    </h2>\r\n\r\n                    <form className=\"mt-4 bg-[#F6F7D3]\" onSubmit={handlePasswordChange}>\r\n                        <div>\r\n                            <label className=\"block text-[#305973] text-3xl\">\r\n                                Current Password\r\n                            </label>\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Enter your current password\"\r\n                                className=\"w-full p-3 mt-2 mb-4 border rounded\"\r\n                                autoFocus\r\n                                required\r\n                                value={currentPassword}\r\n                                onChange={(e) => setCurrentPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label className=\"block text-[#305973] text-3xl mt-3\">\r\n                                New Password\r\n                            </label>\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Enter your new password\"\r\n                                className=\"w-full p-3 mt-2 mb-4 border rounded\"\r\n                                required\r\n                                value={newPassword}\r\n                                onChange={(e) => setNewPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"mt-2\">\r\n                            <label className=\"block text-[#305973] text-3xl mt-3\">\r\n                                Confirm Password\r\n                            </label>\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Confirm your password\"\r\n                                className=\"w-full p-3 mt-2 mb-4 border rounded\"\r\n                                minLength=\"6\"\r\n                                required\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"w-full bg-[#305973] text-white p-3 rounded mt-4\"\r\n                        >\r\n                            CHANGE PASSWORD\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,iBAAiB,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}